{"version":3,"sources":["redux/store.js","redux/reducers/locationReducer.js","redux/reducers/fiveDayReducer.js","redux/reducers/favoritesReducer.js","redux/reducers/errorReducer.js","redux/reducers/currentWeatherReducer.js","redux/reducers/autocompleteReducer.js","redux/reducers/appConfigReducer.js","App/actions.js","components/HeroloTabs/HeroloTabs.js","services/HTTP.js","services/API/accuweather.js","components/InnerCard.js","components/CurrentWeather/CurrentWeather.js","services/util.js","components/HeroloAutocomplete/HeroloAutocomplete.js","components/ForcastCard/ForcastCard.js","components/FiveDailyForecasts/actions.js","components/FiveDailyForecasts/FiveDailyForecasts.js","Views/Weather/components/WelcomeSearch.js","Views/Weather/Weather.js","Views/Favorite/Favorite.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","location","state","lat","lon","asked","action","type","data","fiveDay","payload","favorites","Map","a","set","name","d","delete","error","status","currentWeather","info","key","autocomplete","appConfig","themeType","tempratureUnit","store","createStore","applyMiddleware","thunk","useStyles","makeStyles","theme","root","display","flexDirection","alignItems","padding","flexGrow","backgroundColor","palette","background","primary","connect","dispatch","updateAppConfig","appConfigActions","props","React","useState","isDark","setIsDark","tabProps","index","tabName","locationId","url","match","params","query","search","id","label","value","to","component","Link","classes","setValue","useEffect","tab","AppBar","position","className","Tabs","onChange","event","newValue","aria-label","Tab","Switch","checked","target","color","inputProps","HTTP","axios","create","baseURL","withCredentials","headers","Accept","apikey","interceptors","request","use","config","Promise","reject","response","console","log","route","resolve","get","then","res","catch","err","accuweatherAPI","loactionId","isMetric","language","details","metric","innerCard","Card","children","tempUnitBtn","paddingTop","minWidth","outline","media","backgroundSize","width","height","minHeight","dispatchCurrentWeather","setCurrentWeather","dataInit","current_weather","appTempUnit","map","item","i","Grid","container","spacing","style","xs","Typography","variant","moment","LocalObservationDateTime","format","WeatherText","marginTop","CardMedia","image","WeatherIcon","toString","padStart","Box","Math","floor","Temperature","Value","Button","onClick","Divider","orientation","flexItem","util","delay","callback","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","dispatchCurrentWeatherInfo","outterCard","icon","marginRight","URLSearchParams","useLocation","open","setOpen","loading","setLoading","items","setItems","input","setInput","fetchCities","searchQuery","cities","CITEIS_AUTOCOMPLETE_DATA","q","setNewVal","newVal","history","push","Key","LocalizedName","Country","onMountedData","itemInOptions","find","option","Autocomplete","onInputChange","getOptionLabel","options","margin","getOptionSelected","onOpen","onClose","renderOption","renderInput","Paper","TextField","disableUnderline","autoFocus","placeholder","InputProps","startAdornment","endAdornment","Fragment","CircularProgress","size","convert","require","weatherInfo","borderRadius","maxWidth","unitText","tempCumpute","temp","from","gutterBottom","align","Date","Day","Icon","IconPhrase","sm","justifyContent","Maximum","Minimum","actions","forecastGridItem","paper","control","sleep","ADD_FIVE_DAY_FETCH_DATA","fiveDaysForecastsItems","setFiveDaysForecastsItems","FIVE_DAYS_DATA","fiveDaysFetch","DailyForecasts","justify","direction","md","lg","WelcomeSearch","mt","m","HeroloAutocomplete","favList","maxHeight","overflowY","weatherTitleIcon","currentWeatherGrid","Container","path","CurrentWeather","exact","FiveDailyForecasts","ListItemLink","ListItem","button","zIndex","List","ListItemIcon","ListItemText","href","opacity","backgroundImage","createMuiTheme","light","dark","breakpoints","values","xl","test","render","Weather","Favorite","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.4fc9c571.chunk.js","sourcesContent":["import thunk from 'redux-thunk'\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport { locationReducer } from './reducers/locationReducer'\r\nimport { fiveDayReducer } from './reducers/fiveDayReducer'\r\nimport { favoritesReducer } from './reducers/favoritesReducer'\r\nimport { errorReducer } from './reducers/errorReducer'\r\nimport { currentWeatherReducer } from './reducers/currentWeatherReducer'\r\nimport { autocompleteReducer } from './reducers/autocompleteReducer'\r\nimport { appConfigReducer } from './reducers/appConfigReducer'\r\n\r\nconst reducer = combineReducers({\r\n  location: locationReducer,\r\n  fiveDay: fiveDayReducer,\r\n  favorites: favoritesReducer,\r\n  error: errorReducer,\r\n  currentWeather: currentWeatherReducer,\r\n  autocomplete: autocompleteReducer,\r\n  appConfig: appConfigReducer,\r\n  \r\n})\r\n\r\nexport const store = createStore(reducer, applyMiddleware(thunk))","export const locationReducer = (\n  state = { lat: 32.045, lon: 34.77, asked: false },\n  action\n) => {\n  switch (action.type) {\n    case \"SET_LOCATION\":\n      return action.data;\n    default:\n      return state;\n  }\n};\n","export const fiveDayReducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"ADD_FIVE_DAY_FETCH_DATA\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","// a hashmap can be used to fetch a city object from the favorite list in O(1)\n// instead of O(n) fetching from an array\nexport const favoritesReducer = (state = new Map(), action) => {\n  switch (action.type) {\n    case \"ADD_FAVORITE\":\n      const a = new Map(state);\n      a.set(action.data.name, action.data);\n      return a;\n    case \"REMOVE_FAVORITE\":\n      const d = new Map(state);\n      d.delete(action.data.name);\n      return d;\n    default:\n      return state;\n  }\n};\n","export const errorReducer = (state = { status: false }, action) => {\n  switch (action.type) {\n    case \"SET_ERROR\":\n      return action.data;\n    default:\n      return state;\n  }\n};\n","export const currentWeatherReducer = (\r\n  state = {\r\n    data: {},\r\n    info: {\r\n        name: null,\r\n        key: null,\r\n    }\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"ADD_CURRENT_WEATHER_RESULTS\":\r\n      return { ...state, data: { ...state.data, ...action.payload } };\r\n    case \"UPDATE_CURRENT_WEATHER_INFO\":\r\n      return { ...state, info: { ...state.info, ...action.payload } };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const autocompleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_SERACH_RESULTS\":\r\n      return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const appConfigReducer = (\r\n  state = {\r\n    themeType: 'dark',\r\n    tempratureUnit: \"Metric\",\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"UPDATE_APP_CONFIG\":\r\n      return { ...state, ...action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export default {\r\n  UPDATE_APP_CONFIG: (payload) => {\r\n    return { type: \"UPDATE_APP_CONFIG\", payload: payload };\r\n  },\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport { connect } from \"react-redux\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Switch } from \"@material-ui/core\";\r\nimport appConfigActions from \"../../App/actions\"\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    padding: 0,\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.primary,\r\n  },\r\n}));\r\n\r\nfunction HeroloTabs(props) {\r\n  const [isDark, setIsDark] = React.useState( props.appConfig.themeType === \"dark\" );\r\n\r\n  const handleSwitchChange = (event) => {\r\n    props.updateAppConfig({ themeType: event.target.checked ? 'dark' : 'light'});\r\n    setIsDark( event.target.checked );\r\n  };\r\n\r\n  const handleTabChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const tabProps = (index, tabName) => {\r\n    const locationId = props.url.match.params.locationId;\r\n    const query = props.url.location.search;\r\n    return {\r\n      id: `simple-tab-${index}`,\r\n      \"aria-controls\": `simple-tabpanel-${index}`,\r\n      label: tabName,\r\n      value: tabName,\r\n      to: `/${tabName}${locationId ? \"/\" + locationId : \"\"}/${query}`,\r\n      component: Link,\r\n    };\r\n  };\r\n\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(null);\r\n\r\n  React.useEffect(() => {\r\n    setValue(props.url.match.params.tab);\r\n  }, [props.url.match.params.tab]);\r\n\r\n  return (\r\n    // <div className={classes.root}>\r\n    <AppBar position=\"static\" className={classes.root}>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleTabChange}\r\n        aria-label=\"simple tabs example\"\r\n      >\r\n        <Tab {...tabProps(0, \"weather\")} />\r\n        <Tab {...tabProps(1, \"favorite\")} />\r\n      </Tabs>\r\n      <Switch\r\n        className=\"ml-auto\"\r\n        checked={isDark}\r\n        onChange={handleSwitchChange}\r\n        color=\"primary\"\r\n        inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n      />\r\n    </AppBar>\r\n    // </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    appConfig: state.appConfig,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateAppConfig: (payload) =>\r\n      dispatch(appConfigActions.UPDATE_APP_CONFIG(payload)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeroloTabs);\r\n","import axios from 'axios';\r\n\r\nconst HTTP = axios.create({\r\n  baseURL: 'http://dataservice.accuweather.com/',\r\n  withCredentials: false,\r\n  headers: {\r\n    Accept: 'application/json',\r\n    'Content-Type': 'application/json',\r\n  },\r\n  params:{\r\n    apikey: 'JpXZNXKBXpKo5VVG0RZzybpKahdMX8vv'\r\n  }\r\n});\r\n\r\nconst get = (route, params, config) => {\r\n  return new Promise((resolve, reject) => {\r\n    HTTP.get(route, { params })\r\n      .then(res => {\r\n        resolve(res.data);\r\n      })\r\n      .catch(err => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nconst post = async (route, params) => {\r\n  return new Promise((resolve, reject) => {\r\n    HTTP.post(route, params).then(res => {\r\n      resolve(res);\r\n    });\r\n  });\r\n};\r\n\r\nconst put = async (route, params) => {\r\n  return new Promise((resolve, reject) => {\r\n    HTTP.put(route, params).then(res => {\r\n      resolve(res);\r\n    });\r\n  });\r\n};\r\n\r\n// request interceptor\r\nHTTP.interceptors.request.use(\r\n  config => {\r\n    // config.headers[\"HEADER-NAME\"]\r\n    return config;\r\n  },\r\n  error => {\r\n    // Do something with request error\r\n    return Promise.reject(error);\r\n  },\r\n);\r\n\r\n// response interceptor\r\nHTTP.interceptors.response.use(\r\n  response => {\r\n    return response;\r\n  },\r\n  error => {\r\n    console.log('error', error);\r\n    return Promise.reject(error);\r\n  },\r\n);\r\n\r\nexport default {\r\n  get,\r\n  put,\r\n  post,\r\n};\r\n","import HTTP from \"../HTTP\";\r\nexport const accuweatherAPI = {\r\n  fiveDays: (loactionId, isMetric) =>\r\n    HTTP.get(\r\n      `http://dataservice.accuweather.com/forecasts/v1/daily/5day/${loactionId}`,\r\n      { language: \"en-us\", details: true, metric: true }\r\n    ),\r\n\r\n  autocompleteCities: (searchQuery) => {\r\n    if (!searchQuery) return [];\r\n    return HTTP.get(\"locations/v1/cities/autocomplete\", {\r\n      language: \"en-us\",\r\n      q: searchQuery,\r\n    });\r\n  },\r\n  \r\n  currentWeather: (loactionId) => {\r\n    return HTTP.get(\r\n      `http://dataservice.accuweather.com/currentconditions/v1/${loactionId}`,\r\n      { language: \"en-us\", details: true }\r\n    );\r\n  },\r\n};\r\n","import { Card } from \"@material-ui/core\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst InnerCard = (props) => {\r\n  const useStyles = makeStyles((theme) => ({\r\n    innerCard: {\r\n      backgroundColor: `${theme.palette.innerCard[props.appConfig.themeType]} !important`,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  debugger;\r\n  return <Card className={`${classes.innerCard} ${props.className}`}>{props.children}</Card>;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  appConfig: state.appConfig,\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InnerCard);\r\n","import React from \"react\";\r\nimport current_weather from \"../../data/current_weather.json\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport appConfigActions from \"../../App/actions\";\r\nimport { accuweatherAPI } from \"../../services/API/accuweather\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardMedia,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport InnerCard from \"../InnerCard.js\";\r\n\r\nconst useStyles = makeStyles({\r\n  tempUnitBtn: {\r\n    paddingTop: \"12px\",\r\n    minWidth: \"unset\",\r\n    outline: \"none !important\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#461eb7 !important\",\r\n    },\r\n  },\r\n  media: {\r\n    backgroundSize: \"auto\",\r\n    // margin: \"auto\",\r\n    width: \"45px\",\r\n    height: \"45px\",\r\n  },\r\n  root: {\r\n\t  minWidth: '444px',\r\n\t  minHeight: '191px'\r\n  }\r\n});\r\n\r\nfunction CurrentWeather(props) {\r\n  const locationId = props.match.params.locationId;\r\n  const [currentWeather, setCurrentWeather] = React.useState(null);\r\n  // const [props.appConfig.tempratureUnit, setTemperatureUnit] = React.useState(\"Metric\");\r\n  const classes = useStyles();\r\n\r\n  const dataInit = async () => {\r\n    if (!locationId) return;\r\n\r\n    const currentWeather =\r\n      current_weather ||\r\n      props.currentWeather[locationId] ||\r\n      (await accuweatherAPI.currentWeather(locationId));\r\n    setCurrentWeather(currentWeather);\r\n    props.dispatchCurrentWeather({ [locationId]: currentWeather });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    console.log(\"currentWeather key change\", props.currentWeather.info.key);\r\n    dataInit(props.currentWeather.info.key);\r\n  }, [props.currentWeather.info.key]);\r\n  const appTempUnit = props.appConfig.tempratureUnit;\r\n  return (\r\n    //   <InnerCard></InnerCard>\r\n    <InnerCard className={classes.root}>\r\n      {currentWeather &&\r\n        props.currentWeather.info.name &&\r\n        currentWeather.map((item, i) => (\r\n          <Grid container spacing={3} key={i} style={{ padding: \"15px\" }}>\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"subtitle2\" className=\"px-4\">\r\n                {\" \"}\r\n                {props.currentWeather.info.name}{\" \"}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" className=\"px-4\">\r\n                {\" \"}\r\n                {moment(item.LocalObservationDateTime).format(\"dddd\")}{\" \"}\r\n                {moment(item.LocalObservationDateTime).format(\"HH:MM\")}{\" \"}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" className=\"px-4\">\r\n                {\" \"}\r\n                {item.WeatherText}{\" \"}\r\n              </Typography>\r\n              <Grid\r\n                container\r\n                spacing={2}\r\n                className=\"px-4\"\r\n                style={{ marginTop: \"auto\" }}\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid item xs={\"auto\"}>\r\n                  <CardMedia\r\n                    className={classes.media}\r\n                    image={`https://developer.accuweather.com/sites/default/files/${item.WeatherIcon.toString().padStart(\r\n                      2,\r\n                      \"0\"\r\n                    )}-s.png`}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={\"auto\"}>\r\n                  <Box display=\"flex\">\r\n                    <Typography variant=\"h2\" className=\"pt-1\">\r\n                      {\" \"}\r\n                      {Math.floor(item.Temperature[appTempUnit].Value)}{\" \"}\r\n                    </Typography>\r\n                    <Box display=\"flex\" height=\"max-content\">\r\n                      <Button\r\n                        onClick={() =>\r\n                          props.updateAppConfig({ tempratureUnit: \"Metric\" })\r\n                        }\r\n                        color={\r\n                          appTempUnit === \"Metric\" ? \"neutral(2)\" : \"secondary\"\r\n                        }\r\n                        className={classes.tempUnitBtn}\r\n                      >\r\n                        {\" \"}\r\n                        °C{\" \"}\r\n                      </Button>\r\n                      <Divider orientation=\"vertical\" flexItem />\r\n                      <Button\r\n                        onClick={() =>\r\n                          props.updateAppConfig({\r\n                            tempratureUnit: \"Imperial\",\r\n                          })\r\n                        }\r\n                        color={\r\n                          appTempUnit === \"Imperial\"\r\n                            ? \"neutral(2)\"\r\n                            : \"secondary\"\r\n                        }\r\n                        className={classes.tempUnitBtn}\r\n                      >\r\n                        {\" \"}\r\n                        °F{\" \"}\r\n                      </Button>\r\n                    </Box>\r\n                  </Box>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            {/* <Grid item xs={6}>\r\n                <h1>hello placeholder</h1>\r\n              </Grid> */}\r\n          </Grid>\r\n        ))}\r\n    </InnerCard>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentWeather: state.currentWeather,\r\n    appConfig: state.appConfig,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateAppConfig: (payload) =>\r\n      dispatch(appConfigActions.UPDATE_APP_CONFIG(payload)),\r\n    dispatchCurrentWeather: (payload) =>\r\n      dispatch({ type: \"ADD_CURRENT_WEATHER_RESULTS\", payload }),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrentWeather);\r\n","import React from \"react\";\r\n\r\nexport const util = {\r\n  useDebounce: (value, delay, callback) => {\r\n    // State and setters for debounced value\r\n    const [debouncedValue, setDebouncedValue] = React.useState(value);\r\n\r\n    React.useEffect(\r\n      () => {\r\n        // Update debounced value after delay\r\n        const handler = setTimeout(() => {\r\n          setDebouncedValue(value);\r\n          if (callback) callback(value);\r\n        }, delay);\r\n\r\n        // Cancel the timeout if value changes (also on delay change or unmount)\r\n        // This is how we prevent debounced value from updating if value is changed ...\r\n        // .. within the delay period. Timeout gets cleared and restarted.\r\n\r\n        return () => {\r\n          clearTimeout(handler);\r\n        };\r\n      },\r\n      [value, delay] // Only re-call effect if value or delay changes\r\n    );\r\n\r\n    return debouncedValue;\r\n  },\r\n  sleep: (delay = 0) => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(resolve, delay);\r\n    });\r\n  },\r\n};\r\n","// *https://www.registers.service.gov.uk/registers/country/use-the-api*\r\n// import fetch from \"cross-fetch\";\r\n\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { util } from \"../../services/util\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport HTTP from \"../../services/HTTP\";\r\nimport CITEIS_AUTOCOMPLETE_DATA from \"../../data/cities_autocomplete.json\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport \"./WeatherAutocomplete.scss\";\r\n\r\nconst useQuery = () => new URLSearchParams(useLocation().search);\r\n/* prettier-ignore */\r\n\r\nfunction HeroloAutocomplete(props) {\r\n\r\n\r\n\tconst useStyles = makeStyles((theme) => ({\r\n\t\troot: {\r\n\t\t\t// padding: 0,\r\n\t\t\tbackgroundColor: theme.palette.outterCard[props.appConfig.themeType],\r\n\t\t\tpadding: \"2px 4px\",\r\n\t\t\tdisplay: \"flex\",\r\n\t\t\talignItems: \"center\",\r\n\t\t},\r\n\t\r\n\t\ticon: {\r\n\t\t\t// color: theme.palette.text.secondary,\r\n\t\t\tmarginRight: theme.spacing(2),\r\n\t\t},\r\n\t}));\r\n\r\n\tconst query = useQuery();\r\n\tconst [open, setOpen] = React.useState(false);\r\n\tconst [loading, setLoading] = React.useState(false);\r\n\tconst [items, setItems] = React.useState([]);\r\n\tconst [value, setValue] = React.useState(null);\r\n\tconst [input, setInput] = React.useState(null);\r\n\tconst locationId = props.match.params.locationId\r\n\r\n\tconst fetchCities = async (searchQuery) => {\r\n\t\tconsole.log(\"fetchCities\");\r\n\t\tlet cities;\r\n\t\tsetLoading(true);\r\n\t\tif (!searchQuery) cities = [];\r\n\t\telse {\r\n\t\t\tawait util.sleep(1000);\r\n\t\t\tcities = CITEIS_AUTOCOMPLETE_DATA || (await HTTP.get(\"locations/v1/cities/autocomplete\", { language: \"en-us\", q: searchQuery, }));\r\n\t\t}\r\n\r\n\t\tsetLoading(false);\r\n\t\treturn cities;\r\n\t};\r\n\r\n\tconst setNewVal = (newVal) => {\r\n\t\tsetValue(newVal);\r\n\t\tif (!newVal) {\r\n\t\t\tprops.history.push(`/weather`);\r\n\t\t\tprops.dispatchCurrentWeatherInfo({ name: null, key: null });\r\n\t\t\treturn;\r\n\t\t} else {\r\n\t\t\tprops.history.push( `/weather/${newVal.Key}/?search=${newVal.LocalizedName}` );\r\n\t\t\tprops.dispatchCurrentWeatherInfo({\r\n\t\t\t\tname: `${newVal.LocalizedName}${ newVal.Country ? \", \" + newVal.Country.LocalizedName : \"\" }`,\r\n\t\t\t\tkey: newVal.Key,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst onMountedData = async () => {\r\n\t\tconst searchQuery = query.get(\"search\");\r\n\t\tconst cities = await fetchCities(searchQuery);\r\n\t\tsetItems(cities);\r\n\t\tif (locationId) {\r\n\t\t\t// If there is locationId in the route we wants to select it from the items we fetched to the autocomplete\r\n\t\t\tconst itemInOptions = cities.find( (option) => option.Key === locationId );\r\n\t\t\tsetNewVal(itemInOptions);\r\n\t\t}\r\n\t};\r\n\r\n\t// On Mounted\r\n\tReact.useEffect(() => {\r\n\t\tonMountedData();\r\n\t}, []);\r\n\r\n\tutil.useDebounce(input, 1000, async () => { if (input) setItems(await fetchCities(input)); });\r\n\tconst classes = useStyles();\r\n\r\n\r\n\treturn (\r\n\t\t\r\n\t\t<Autocomplete\r\n\t\tclassName=\"WeatherAutocomplete--main-container\"\r\n\t\t\tonInputChange={async (event, searchQuery) => {\r\n\t\t\t\t// Emiting the function only if input changed came from user typing and not by clicking on of the options\r\n\t\t\t\tif (event && event.type === \"change\" && searchQuery)\r\n\t\t\t\t\tsetInput(searchQuery);\r\n\t\t\t}}\r\n\t\t\tonChange={(event, newVal) => setNewVal(newVal)} \r\n\t\t\t// ListboxComponent={ListboxComponent}\r\n\t\t\tgetOptionLabel={(option) => `${option.LocalizedName}, ${ option.Country ? option.Country.LocalizedName : \"\" }` }\r\n\t\t\tvalue={value}\r\n\t\t\toptions={items}\r\n\t\t\tloading={loading}\r\n\t\t\tmargin=\"dense\"\r\n\t\t\tgetOptionSelected={(option, value) => value && option && option.Key === value.Key }\r\n\t\t\topen={open}\r\n\t\t\tonOpen={() => { setOpen(true); }}\r\n\t\t\tonClose={() => { setOpen(true); }}\r\n\t\t\trenderOption={(option) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Grid container alignItems=\"center\" className=\"asdsadlfgjoedfikghjokdfsghj\" >\r\n\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t<LocationOnIcon className={classes.icon} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs >\r\n\t\t\t\t\t\t\t<Typography variant=\"body2\" >{`${option.LocalizedName}, ${option.Country.LocalizedName}`}</Typography>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t);\r\n\t\t\t}}\r\n\t\t\trenderInput={(params) => (\r\n\t\t\t\t<Paper component=\"form\" className={classes.root}>\t\r\n\t\t\t\t<TextField\r\n\t\t\t\tclassName=\"WeatherAutocomplete--input\"\r\n\t\t\t\t// color=\"natural\"\r\n\t\t\t\tdisableUnderline\r\n\t\t\t\t\tautoFocus\r\n\t\t\t\t\t{...params}\r\n\t\t\t\t\t// margin=\"dense\"\r\n\t\t\t\t\tplaceholder=\"Select Location\"\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t...params.InputProps,\r\n\t\t\t\t\t\tstartAdornment: (<SearchIcon className=\"mr-1\"/>),\r\n\t\t\t\t\t\tendAdornment: (\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t{loading ? (\r\n\t\t\t\t\t\t\t\t\t<CircularProgress color=\"inherit\" size={20} />\r\n\t\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t{params.InputProps.endAdornment}\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t}}\r\n\t\t\t \t/>\r\n\t\t\t  </Paper>\r\n\t\t\t)}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    appConfig: state.appConfig,\r\n    // fiveDay: state.fiveDay,\r\n    // currentWeather: state.currentWeatherReducer,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    dispatchCurrentWeatherInfo: (payload) =>\r\n      dispatch({ type: \"UPDATE_CURRENT_WEATHER_INFO\", payload }),\r\n    // dispatchFiveDaysData: (payload) => dispatch({ type: \"ADD_FIVE_DAY_FETCH_DATA\", payload }),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeroloAutocomplete);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport PropTypes from \"prop-types\";\r\nimport moment from \"moment\";\r\n\r\nconst convert = require('convert-units')\r\n\r\nconst useStyles = makeStyles({\r\n  media: {\r\n    backgroundSize: 'auto',\r\n    // margin: \"auto\",\r\n    width: \"47px\",\r\n    height: \"45px\",\r\n  },\r\n  weatherInfo: {\r\n    margin: \"10px\",\r\n  },\r\n  root: {\r\n    borderRadius: 0,\r\n    maxWidth: 185,\r\n    minWidth: 185,\r\n  },\r\n  unitText: {\r\n    margin: \"3px 5px\",\r\n  },\r\n});\r\n\r\nfunction ForcastCard(props) {\r\n  const { item } = props;\r\n  const tempCumpute = (temp) => Math.floor( props.appConfig.tempratureUnit === \"Imperial\" ? convert(temp).from('C').to('F') : temp)\r\n  const tempratureUnit = `°${props.appConfig.tempratureUnit === \"Imperial\" ? 'F' : 'C'}`\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    item && (\r\n      <Grid container className={classes.root}>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h6\" color=\"textSecondary\" gutterBottom align=\"center\" > {moment(item.Date).format(\"dddd\")} </Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <CardMedia className={classes.media} image={`https://developer.accuweather.com/sites/default/files/${item.Day.Icon.toString().padStart( 2, \"0\" )}-s.png`} />\r\n        </Grid>\r\n        <Grid container item xs={12} className={classes.weatherInfo}>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h6\" component=\"h2\"> {item.Day.IconPhrase} </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n            <Box display=\"flex\" justifyContent=\"space-between\">\r\n              <Box display=\"flex\">\r\n                <Typography variant=\"h4\">{tempCumpute(item.Temperature.Maximum.Value)}</Typography>\r\n                <Typography variant=\"h5\" className={classes.unitText} >{tempratureUnit}</Typography>\r\n              </Box>\r\n              <Box display=\"flex\">\r\n                <Typography variant=\"h4\" color=\"textSecondary\"> {tempCumpute(item.Temperature.Minimum.Value)}</Typography>\r\n                <Typography variant=\"h5\" color=\"textSecondary\" className={classes.unitText} >{tempratureUnit}</Typography>\r\n              </Box>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n  );\r\n}\r\n\r\nForcastCard.propTypes = {\r\n  item: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    appConfig: state.appConfig,\r\n  };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps)(ForcastCard);\r\n","export const actions = {\r\n  ADD_FIVE_DAY_FETCH_DATA: (payload) => {\r\n    return { type: \"ADD_FIVE_DAY_FETCH_DATA\", payload: payload };\r\n  },\r\n};\r\n","import ForcastCard from \"../ForcastCard/ForcastCard\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { connect } from \"react-redux\";\r\nimport { accuweatherAPI } from \"../../services/API/accuweather\";\r\nimport React from \"react\";\r\nimport { actions } from \"./actions\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\n// import days_of_daily_forecasts from \"../../data/5_days_of_daily_forecasts.json\";\r\nimport FIVE_DAYS_DATA from \"../../data/5_days_of_daily_forecasts.json\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  forecastGridItem: {\r\n    // marginRight: \"10px\",\r\n    // margin: \"10px\",\r\n  },\r\n\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    height: 140,\r\n    width: 100,\r\n  },\r\n  control: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction sleep(delay = 0) {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n}\r\n\r\nfunction DailyForecasts(props) {\r\n  const classes = useStyles();\r\n  const locationId = props.match.params.locationId\r\n  // FiveDaysForecastsItems State\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [fiveDaysForecastsItems, setFiveDaysForecastsItems] = React.useState(\r\n    null\r\n  );\r\n\r\n  const dataInit = async () => {\r\n    setLoading(true);\r\n    await sleep(1000);\r\n    // Fetching 5 Days of Daily Forecasts according to the locationId from the route, first trying to get data from redux store, if not exsit fetching from the server\r\n    const fiveDaysFetch =\r\n      FIVE_DAYS_DATA ||\r\n      props.fiveDay[locationId] ||\r\n      (await accuweatherAPI.fiveDays(locationId));\r\n    if (fiveDaysFetch.DailyForecasts) {\r\n      setFiveDaysForecastsItems(fiveDaysFetch.DailyForecasts);\r\n      props.ADD_FIVE_DAY_FETCH_DATA({\r\n        ...props.fiveDay,\r\n        [locationId]: fiveDaysFetch,\r\n      });\r\n    }\r\n    setLoading(false);\r\n  };\r\n  React.useEffect(() => {\r\n    dataInit();\r\n  }, [locationId]);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      {/* <Grid container className={classes.root}> */}\r\n      {loading ? (\r\n        <Grid item xs={\"auto\"}>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"center\"\r\n            height={283}\r\n            alignItems=\"center\"\r\n          >\r\n            <CircularProgress color=\"inherit\" size={80} />\r\n          </Box>\r\n        </Grid>\r\n      ) : (\r\n        <Grid item xs={\"auto\"}>\r\n          <Grid container justify=\"center\" direction=\"row\">\r\n            {fiveDaysForecastsItems &&\r\n              fiveDaysForecastsItems.map((item, i) => (\r\n                <Grid\r\n                  key={i}\r\n                  item\r\n                  md={\"auto\"}\r\n                  xs={\"auto\"}\r\n                  lg={\"auto\"}\r\n                  className={classes.forecastGridItem}\r\n                >\r\n                  <Box display=\"flex\" justifyContent=\"center\">\r\n                    {/* <CircularProgress color=\"inherit\" size={20} /> */}\r\n                    {/* {i !== 0 && (\r\n                      <Divider\r\n                        orientation=\"vertical\"\r\n                        flexItem\r\n                        style={{ marginRight: \"10px\" }}\r\n                        m={2}\r\n                      />\r\n                    )} */}\r\n                    <ForcastCard item={item} />\r\n                    {/* <Divider orientation=\"vertical\" /> */}\r\n                  </Box>\r\n                </Grid>\r\n              ))}\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n      {/* </Grid> */}\r\n    </Card>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    appConfig: state.appConfig,\r\n    fiveDay: state.fiveDay,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    ADD_FIVE_DAY_FETCH_DATA: (payload) =>\r\n      dispatch(actions.ADD_FIVE_DAY_FETCH_DATA(payload)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DailyForecasts);\r\n","import { Box, Grid, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport HeroloAutocomplete from \"../../../components/HeroloAutocomplete/HeroloAutocomplete\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n}));\r\nexport default function WelcomeSearch() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container >\r\n      \r\n      <Typography color=\"textPrimary\" variant=\"h4\" gutterBottom > Diffrent kind of weather </Typography>\r\n      <Typography color=\"textPrimary\" variant=\"h4\" gutterBottom > inside of 24/7 hours. </Typography>\r\n      <Box mt={2}>\r\n        <Typography color=\"textPrimary\" m={2} variant=\"subtitle2\" gutterBottom >\r\n          Yet too often some very human cultural artifacts really lead the\r\n          business down the certain routes.\r\n        </Typography>\r\n      </Box>\r\n      <Box mt={8} width=\"100%\">\r\n        <Route component={HeroloAutocomplete} />\r\n        <Box mt={2}>\r\n          <Typography color=\"textPrimary\" variant=\"subtitle2\" >\r\n            Best way to know your ciry weather.\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n      {/* <Grid item xs={12} style={{ padding: 0 }}> */}\r\n      {/* </Grid> */}\r\n      {/* <Grid item xs={12}>\r\n        <Route exact path=\"/weather/:locationId/\" component={CurrentWeather} />\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Route\r\n          exact\r\n          path=\"/weather/:locationId/\"\r\n          component={FiveDailyForecasts}\r\n        />\r\n      </Grid> */}\r\n    </Grid>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, useLocation } from \"react-router-dom\";\r\nimport HeroloAutocomplete from \"../../components/HeroloAutocomplete/HeroloAutocomplete\";\r\nimport CurrentWeather from \"../../components/CurrentWeather/CurrentWeather\";\r\nimport FiveDailyForecasts from \"../../components/FiveDailyForecasts/FiveDailyForecasts\";\r\nimport HTTP from \"../../services/HTTP\";\r\nimport CITEIS_AUTOCOMPLETE_DATA from \"../../data/cities_autocomplete.json\";\r\nimport FIVE_DAYS_DATA from \"../../data/5_days_of_daily_forecasts.json\";\r\nimport currentWeather from \"../../data/current_weather.json\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport WelcomeSearch from \"./components/WelcomeSearch\";\r\nimport { Box, Card, CardMedia, Container, Typography } from \"@material-ui/core\";\r\nimport InnerCard from \"../../components/InnerCard\";\r\n\r\nfunction Weather(props) {\r\n  const useStyles = makeStyles((theme) => ({\r\n    favList: {\r\n      maxHeight: \"65vh\",\r\n      overflowY: \"auto\",\r\n    },\r\n    outterCard: {\r\n      margin: \"0 auto\",\r\n      width: \"100%\",\r\n      maxWidth: \"957px\",\r\n      //   backgroundColor: theme.palette.outterCard[props.appConfig.themeType],\r\n    },\r\n    weatherTitleIcon: {\r\n      width: \"96px\",\r\n      height: \"100%\",\r\n    },\r\n\r\n    currentWeatherGrid: {\r\n      padding: \"17px\",\r\n      height: \"max-content\",\r\n    },\r\n    root: {\r\n      width: \"100%\",\r\n      margin: \"0 auto\",\r\n      maxWidth: \"1005px\",\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container maxWidth=\"md\" className={classes.root}>\r\n      <Grid container className={classes.root} spacing={0}>\r\n        <Grid item xs={12} md={\"6\"}>\r\n          <Route component={WelcomeSearch} />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          md={\"6\"}\r\n          //   spacing={3}\r\n          container\r\n          // className={`${classes.currentWeatherGrid}`}\r\n        >\r\n          <Card container className={`${classes.currentWeatherGrid}`}>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12}>\r\n                <InnerCard container>\r\n                  <Grid\r\n                    container\r\n                    xs={12}\r\n                    //   className=\"px-2\"\r\n                    style={{ padding: \"15px\" }}\r\n                  >\r\n                    <Grid item>\r\n                      <CardMedia\r\n                        className={classes.weatherTitleIcon}\r\n                        image={`https://www.iconfinder.com/data/icons/weather-flat-14/64/weather02-512.png`}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Typography variant=\"h5\">Total Weather Report</Typography>\r\n                      <Typography variant=\"h5\"> some info</Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </InnerCard>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Route\r\n                //   exact\r\n                  path={\"/weather/:locationId/\"}\r\n                  component={CurrentWeather}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Route\r\n            exact\r\n            path={\"/weather/:locationId/\"}\r\n            component={FiveDailyForecasts}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    appConfig: state.appConfig,\r\n    // fiveDay: state.fiveDay,\r\n    // currentWeather: state.currentWeatherReducer,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    // dispatchCurrentWeatherInfo: (payload) => dispatch({ type: \"UPDATE_CURRENT_WEATHER_INFO\", payload }),\r\n    // dispatchFiveDaysData: (payload) => dispatch({ type: \"ADD_FIVE_DAY_FETCH_DATA\", payload }),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Weather);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport InboxIcon from \"@material-ui/icons/Inbox\";\r\nimport DraftsIcon from \"@material-ui/icons/Drafts\";\r\nimport { Box, Card, Container, Grid } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { connect } from \"react-redux\";\r\nfunction ListItemLink(props) {\r\n  return <ListItem button component=\"a\" {...props} />;\r\n}\r\n\r\nfunction SimpleList(props) {\r\n  const useStyles = makeStyles((theme) => {\r\n    debugger;\r\n    return {\r\n      favList: {\r\n        maxHeight: \"65vh\",\r\n        overflowY: \"auto\",\r\n      },\r\n      root: {\r\n        margin: \"0 auto\",\r\n        width: \"100%\",\r\n        maxWidth: \"957px\",\r\n        // backgroundColor: theme.palette.otterCard[props.appConfig.themeType],\r\n      },\r\n  \r\n    };\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      flexDirection=\"column\"\r\n      zIndex={4}\r\n      className={classes.root}\r\n    >\r\n      <Grid container spacing={3} className=\"py-4\">\r\n        <Grid item xs={12}>\r\n          <Card container>\r\n            <Typography variant=\"h5\" className=\"px-4 py-3\">\r\n              h5. Heading\r\n            </Typography>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Card container className={(classes.favList)}>\r\n            <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n              <ListItem button>\r\n                <ListItemIcon>\r\n                  <InboxIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Inbox\" />\r\n              </ListItem>\r\n              <ListItem button>\r\n                <ListItemIcon>\r\n                  <DraftsIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Drafts\" />\r\n              </ListItem>\r\n            </List>\r\n            <Divider />\r\n            <List component=\"nav\" aria-label=\"secondary mailbox folders\">\r\n              <ListItem button>\r\n                <ListItemText primary=\"Trash\" />\r\n              </ListItem>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n            </List>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    appConfig: state.appConfig,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(SimpleList);\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport \"./App.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport HeroloTabs from \"./components/HeroloTabs/HeroloTabs\";\r\n// import HeroloAutocomplete from \"./Views/Weather/components/HeroloAutocomplete/HeroloAutocomplete\";\r\nimport CurrentWeather from \"./components/CurrentWeather/CurrentWeather\";\r\nimport Weather from \"./Views/Weather/Weather\";\r\nimport { Box, CardMedia, Grid } from \"@material-ui/core\";\r\nimport Favorite from \"./Views/Favorite/Favorite\";\r\n\r\nconst useStyles = makeStyles({\r\n  media: {\r\n    backgroundSize: \"cover\",\r\n    // margin: \"auto\",\r\n    width: \"100vw\",\r\n    height: \"100vh\",\r\n    opacity: 0.15,\r\n    \"-webkit-mask-image\":\r\n      \" -webkit-linear-gradient(right, rgba(0, 0, 0, 0), rgba(0, 0, 0, 1))\",\r\n    position: \"fixed\",\r\n    backgroundImage: \"url(https://www.ubackground.com/_ph/17/563786933.jpg)\",\r\n  },\r\n});\r\n\r\nfunction App(props) {\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      type: props.appConfig.themeType,\r\n      background: {\r\n        paper: props.appConfig.themeType == \"dark\" ? \"#3810ae\" : \"#FFFF\",\r\n      },\r\n      innerCard: {\r\n        light: \"#FFFF\",\r\n        dark: \"#461eb7\",\r\n      },\r\n      outterCard: {\r\n        light: \"#FFFF\",\r\n        dark: \"#3810ae\",\r\n      },\r\n    },\r\n    breakpoints: {\r\n      // Define custom breakpoint values.\r\n      // These will apply to Material-UI components that use responsive\r\n      // breakpoints, such as `Grid` and `Hidden`. You can also use the\r\n      // theme breakpoint functions `up`, `down`, and `between` to create\r\n      // media queries for these breakpoints\r\n      values: { xs: 0, sm: 450, md: 600, lg: 900, xl: 1200, test: 1120 },\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n  const [selectedLocation, setselectedLocation] = React.useState(null);\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <CardMedia\r\n        className={classes.media}\r\n        image=\"https://www.wallpaperflare.com/static/656/666/467/landscape-mountains-clouds-forest-wallpaper.jpg\"\r\n      />\r\n\r\n      <Router>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <Route\r\n              path={\"/:tab/:locationId?\"}\r\n              render={(url) => <HeroloTabs url={url} />}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Switch>\r\n              <Route path={\"/weather/:locationId?\"} component={Weather} />\r\n              <Route path={\"/favorite\"} component={Favorite} />\r\n              <Redirect exact to={\"/weather\" }/>\r\n            </Switch>\r\n          </Grid>\r\n        </Grid>\r\n      </Router>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    appConfig: state.appConfig,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}