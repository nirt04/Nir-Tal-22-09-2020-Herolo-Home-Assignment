{"version":3,"sources":["redux/store.js","redux/reducers/fiveDayReducer.js","redux/reducers/favoritesReducer.js","redux/reducers/currentWeatherReducer.js","redux/reducers/autocompleteReducer.js","redux/reducers/appConfigReducer.js","plugins/material-ui.js","App/style.js","App/actions.js","components/HeroloTabs/HeroloTabs.js","components/CurrentWeather/style.js","services/HTTP.js","services/API/accuweather.js","Views/Weather/actions.js","components/InnerCard.js","Views/Favorites/actions.js","components/CurrentWeather/CurrentWeather.js","components/FiveDailyForecasts/actions.js","components/FiveDailyForecasts/style.js","components/ForcastCard/ForcastCard.js","components/GridContainer.js","components/FiveDailyForecasts/FiveDailyForecasts.js","services/util.js","components/HeroloAutocomplete/actions.js","components/HeroloAutocomplete/HeroloAutocomplete.js","Views/Weather/components/WelcomeSearch.js","Views/Weather/Weather.js","Views/Favorites/Favorites.js","App/AppRoutesContainer.js","App/App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","fiveDay","state","action","type","payload","favorites","localStorage","getItem","JSON","parse","key","data","currentWeather","info","name","autocomplete","appConfig","themeType","tempratureUnit","isAppReady","store","createStore","applyMiddleware","thunk","theme","props","createMuiTheme","palette","background","paper","innerCard","light","dark","outterCard","breakpoints","values","xs","sm","md","lg","xl","test","useStyles","makeStyles","root","height","padding","marginTop","display","flexDirection","alignItems","flexGrow","backgroundColor","primary","connect","dispatch","updateAppConfig","appConfigActions","url","React","useState","isDark","setIsDark","match","params","tab","value","setValue","tabProps","index","tabName","locationId","query","location","search","id","label","to","component","Link","classes","useEffect","AppBar","position","className","Tabs","onChange","event","newValue","aria-label","Tab","Box","marginLeft","FormControlLabel","control","Switch","checked","target","color","inputProps","disableHover","outline","tempUnitBtn","paddingTop","minWidth","media","backgroundSize","width","minHeight","CancelToken","axios","cancelTokens","HTTP","create","baseURL","withCredentials","headers","Accept","apikey","interceptors","request","use","config","error","Promise","reject","response","console","log","route","resolve","cancelToken","get","c","then","res","catch","err","accuweatherAPI","lat","lon","q","language","details","loactionId","isMetric","metric","searchQuery","toplevel","getState","a","locationData","Key","weatherData","LocalizedName","Country","InnerCard","children","Card","defaultProps","CURRENT_WEATHER_STORE","FAVORITES_STORE","APP_CONFIG","REMOVE_FAVORITE","favActions","ADD_FAVORITE","UPDATE_APP_CONFIG_STORE","SET_WHEATHER_DATA_BY_KEY","weatherActions","loading","setLoading","dataInit","appTempUnit","isInFavorite","isReady","margin","CircularProgress","size","map","item","i","Grid","container","spacing","style","Typography","variant","moment","LocalObservationDateTime","format","WeatherText","CardMedia","image","WeatherIcon","toString","padStart","Math","floor","Temperature","Value","Button","disableRipple","onClick","Divider","orientation","flexItem","IconButton","pathname","convert","require","weatherInfo","borderRadius","maxWidth","unitText","tempCumpute","temp","from","Date","Day","IconPhrase","Icon","justifyContent","Maximum","Minimum","GridContainer","node","ADD_FIVE_DAY_FETCH_DATA","fiveDaysActions","fiveDaysForecastsItems","setFiveDaysForecastsItems","fiveDaysFetch","DailyForecasts","justify","direction","util","delay","callback","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","autocompleteData","APP_CONFIG_STORE","AUTOCOMPLETE_STORE","UPDATE_CURRENT_WEATHER_INFO","SET_AUTOCOMPLETE_DATA_BY_QUERY","autocompleteActions","history","icon","marginRight","URL_SEARCH_QUERY","URLSearchParams","useLocation","fetchQuery","setFetchQuery","input","setInput","open","setOpen","setNewVal","newVal","push","onComponentMount","fetchItems","itemInOptions","find","option","curWeatherName","length","Autocomplete","onInputChange","inputVal","getOptionLabel","inputValue","options","getOptionSelected","optionValue","onOpen","onClose","renderOption","renderInput","Paper","TextField","autoFocus","placeholder","InputProps","startAdornment","endAdornment","locateMeButton","SET_WHEATHER_DATA_BY_GEOLOCATION","handleLocateMeButton","geolocation","getCurrentPosition","coords","latitude","longitude","gutterBottom","m","HeroloAutocomplete","weatherTitleIcon","Container","WelcomeSearch","path","CurrentWeather","FiveDailyForecasts","favAcations","favList","maxHeight","overflowY","setItem","stringify","List","Object","keys","ListItem","ListItemText","button","ListItemIcon","URL_ROUTE_VALID","navigator","permissions","render","Weather","Favorites","exact","AppRoutesContainer","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.1a166dde.chunk.js","sourcesContent":["import thunk from 'redux-thunk';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { fiveDayReducer } from './reducers/fiveDayReducer';\nimport { favoritesReducer } from './reducers/favoritesReducer';\nimport { currentWeatherReducer } from './reducers/currentWeatherReducer';\nimport { autocompleteReducer } from './reducers/autocompleteReducer';\nimport { appConfigReducer } from './reducers/appConfigReducer';\n\nconst reducer = combineReducers({\n  fiveDay: fiveDayReducer,\n  favorites: favoritesReducer,\n  currentWeather: currentWeatherReducer,\n  autocomplete: autocompleteReducer,\n  appConfig: appConfigReducer,\n\n});\n\nexport const store = createStore(reducer, applyMiddleware(thunk));\n","export const fiveDayReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'ADD_FIVE_DAY_FETCH_DATA':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export const favoritesReducer = (state = localStorage.getItem('FAVORITES_STORE') ? JSON.parse(localStorage.getItem('FAVORITES_STORE')) : {}, action) => {\n  switch (action.type) {\n    case 'ADD_FAVORITE':\n      state[action.payload.key] = action.payload.data;\n      return { ...state };\n    case 'REMOVE_FAVORITE':\n      delete state[action.payload.key];\n      return { ...state };\n    default:\n      return state;\n  }\n};\n","export const currentWeatherReducer = (\n  state = {\n    data: {},\n    info: {\n      name: null,\n      key: null,\n    },\n  },\n  action,\n) => {\n  switch (action.type) {\n    case 'SET_WHEATHER_DATA_BY_GEOLOCATION':\n      return { ...state, data: { ...state.data, ...action.payload } };\n    case 'SET_WHEATHER_DATA_BY_KEY':\n      return { ...state, data: { ...state.data, ...action.payload } };\n    case 'UPDATE_CURRENT_WEATHER_INFO':\n      return { ...state, info: { ...state.info, ...action.payload } };\n    default:\n      return state;\n  }\n};\n","export const autocompleteReducer = (\n  state = {\n    data: {},\n  },\n  action,\n) => {\n  switch (action.type) {\n    case 'SET_AUTOCOMPLETE_DATA_BY_QUERY':\n      return { ...state, data: { ...state.data, ...action.payload } };\n    default:\n      return state;\n  }\n};\n","export const appConfigReducer = (\n  state = {\n    themeType: 'dark',\n    tempratureUnit: 'Metric',\n    isAppReady: false,\n  },\n  action,\n) => {\n  switch (action.type) {\n    case 'UPDATE_APP_CONFIG':\n      return { ...state, ...action.payload };\n    default:\n      return state;\n  }\n};\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nexport const theme = (props) => createMuiTheme({\n  palette: {\n    type: props.appConfig.themeType,\n    background: {\n      paper: props.appConfig.themeType === 'dark' ? '#3810ae' : '#FFFF',\n    },\n    innerCard: {\n      light: '#FFFF',\n      dark: '#461eb7',\n    },\n    outterCard: {\n      light: '#FFFF',\n      dark: '#3810ae',\n    },\n  },\n  breakpoints: {\n    // Define custom breakpoint values.\n    // These will apply to Material-UI components that use responsive\n    // breakpoints, such as `Grid` and `Hidden`. You can also use the\n    // theme breakpoint functions `up`, `down`, and `between` to create\n    // media queries for these breakpoints\n    values: {\n      xs: 0, sm: 450, md: 600, lg: 900, xl: 1200, test: 1120,\n    },\n  },\n});\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles(() => ({\n  root: {\n    height: '100vh',\n    padding: '0',\n    '& > div': {\n      marginTop: '15vh',\n    },\n  },\n}));\n","export default {\n  UPDATE_APP_CONFIG: (payload) => ({ type: 'UPDATE_APP_CONFIG', payload }),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport { connect } from 'react-redux';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { Link } from 'react-router-dom';\nimport { Box, FormControlLabel, Switch } from '@material-ui/core';\nimport appConfigActions from '../../App/actions';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 0,\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.primary,\n  },\n}));\n\nfunction HeroloTabs({ updateAppConfig, url, appConfig }) {\n  const [isDark, setIsDark] = React.useState(appConfig.themeType === 'dark');\n  const [value, setValue] = React.useState(url.match.params.tab || 'weather');\n\n  const handleSwitchChange = (event) => {\n    updateAppConfig({ themeType: event.target.checked ? 'dark' : 'light' });\n    setIsDark(event.target.checked);\n  };\n\n  const handleTabChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const tabProps = (index, tabName) => {\n    const { locationId } = url.match.params;\n    const query = url.location.search;\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n      label: tabName,\n      value: tabName,\n      to: `/${tabName}${locationId ? `/${locationId}` : ''}/${query}`,\n      component: Link,\n    };\n  };\n\n  const classes = useStyles();\n\n  React.useEffect(() => {\n    setValue(url.match.params.tab);\n  }, [url.match.params.tab]);\n\n  return (\n    <AppBar position=\"static\" className={classes.root}>\n      <Tabs\n        value={value}\n        onChange={handleTabChange}\n        aria-label=\"simple tabs example\"\n      >\n        <Tab {...tabProps(0, 'weather')} />\n        <Tab {...tabProps(1, 'favorites')} />\n      </Tabs>\n      <Box marginLeft=\"auto\">\n        <FormControlLabel\n          control={(\n            <Switch\n              checked={isDark}\n              onChange={handleSwitchChange}\n              color=\"default\"\n              inputProps={{ 'aria-label': 'primary checkbox' }}\n            />\n        )}\n          label={appConfig.themeType === 'dark' ? 'Dark' : 'Light'}\n        />\n      </Box>\n    </AppBar>\n  );\n}\n\nHeroloTabs.propTypes = {\n  updateAppConfig: PropTypes.func.isRequired,\n  url: PropTypes.objectOf(PropTypes.any).isRequired,\n  appConfig: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  appConfig: state.appConfig,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateAppConfig: (payload) => dispatch(appConfigActions.UPDATE_APP_CONFIG(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HeroloTabs);\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles({\n  disableHover: {\n    outline: 'none !important',\n    '&:hover': {\n      backgroundColor: '#ffffff00 !important',\n    },\n  },\n  tempUnitBtn: {\n    paddingTop: '12px',\n    minWidth: 'unset',\n    outline: 'none !important',\n    '&:hover': {\n      backgroundColor: '#ffffff00 !important',\n    },\n  },\n  media: {\n    backgroundSize: 'auto',\n    width: '45px',\n    height: '45px',\n  },\n  root: {\n    display: 'flex',\n    minHeight: '191px',\n  },\n});\n","import axios from 'axios';\n\nconst { CancelToken } = axios;\nconst cancelTokens = {};\n\nconst HTTP = axios.create({\n  baseURL: 'http://dataservice.accuweather.com/',\n  withCredentials: false,\n  headers: {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n  },\n  params: {\n    apikey: 'yorJNfSt5GWC6ym3UEo8WZGX0N5eyRhb' || 'rahPnD6qt8hT5e5c1tyfpo5SG51pefEB' || 'JpXZNXKBXpKo5VVG0RZzybpKahdMX8vv' || 'xFGvCy1FaaIkGtmG3Y3fLsuTE1lpdUVX',\n  },\n});\n\nconst get = (route, params, config = {}) => new Promise((resolve, reject) => {\n  if (cancelTokens[config.cancelToken]) cancelTokens[config.cancelToken]('Request canceled.');\n\n  HTTP.get(route, {\n    params,\n    cancelToken: config.cancelToken ? new CancelToken((c) => (cancelTokens[config.cancelToken] = c)) : null,\n  })\n    .then((res) => {\n      resolve(res.data);\n    })\n    .catch((err) => {\n      reject(err);\n    });\n});\n\nconst post = async (route, params) => new Promise((resolve, reject) => {\n  HTTP.post(route, params).then((res) => {\n    resolve(res);\n  });\n});\n\nconst put = async (route, params) => new Promise((resolve, reject) => {\n  HTTP.put(route, params).then((res) => {\n    resolve(res);\n  });\n});\n\n// request interceptor\nHTTP.interceptors.request.use(\n  (config) =>\n    // config.headers[\"HEADER-NAME\"]\n    config,\n  (error) =>\n    // Do something with request error\n    Promise.reject(error),\n\n);\n\n// response interceptor\nHTTP.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    console.log('error', error);\n    return Promise.reject(error);\n  },\n);\n\nexport default {\n  get,\n  put,\n  post,\n};\n","import HTTP from \"../HTTP\";\r\n\r\nexport const accuweatherAPI = {\r\n\r\n  geopositionSearch: (lat,lon) =>\r\n    HTTP.get(\r\n      `http://dataservice.accuweather.com/locations/v1/cities/geoposition/search`,\r\n      { q: `${lat},${lon}`, language: 'en-us', details: true },\r\n      { cancelToken: \"fiveDay\" }\r\n    ),\r\n  \r\n  fiveDays: (loactionId, isMetric) =>\r\n    HTTP.get(\r\n      `http://dataservice.accuweather.com/forecasts/v1/daily/5day/${loactionId}`,\r\n      { language: \"en-us\", details: true, metric: true },\r\n      { cancelToken: \"fiveDay\" }\r\n    ),\r\n\r\n  autocompleteCities: (searchQuery) => {\r\n    if (!searchQuery) return [];\r\n    return HTTP.get(\r\n      \"locations/v1/cities/autocomplete\",\r\n      {\r\n        language: \"en-us\",\r\n        q: searchQuery,\r\n      },\r\n      { cancelToken: \"autocomplete\" }\r\n    );\r\n  },\r\n\r\n  currentWeather: (loactionId) => {\r\n    return HTTP.get(\r\n      `http://dataservice.accuweather.com/currentconditions/v1/${loactionId}`,\r\n      { language: \"en-us\", details: true, toplevel: true },\r\n      { cancelToken: \"currentconditions\" }\r\n    );\r\n  },\r\n};\r\n","import { accuweatherAPI } from '../../services/API/accuweather';\n\nexport default {\n  SET_WHEATHER_DATA_BY_GEOLOCATION: (lat, lon) => async (dispatch, getState) => {\n    const store = getState();\n    const locationData = await accuweatherAPI.geopositionSearch(lat, lon);\n    const weatherData = store.currentWeather.data[locationData.Key] || await accuweatherAPI.currentWeather(locationData.Key);\n    dispatch({ type: 'SET_WHEATHER_DATA_BY_KEY', payload: { [locationData.Key]: weatherData } });\n    dispatch({ type: 'UPDATE_CURRENT_WEATHER_INFO', payload: { name: `${locationData.LocalizedName}${locationData.Country ? `, ${locationData.Country.LocalizedName}` : ''}`, key: locationData.Key } });\n    return { weatherData, locationData };\n  },\n\n  SET_WHEATHER_DATA_BY_KEY: (key) => async (dispatch, getState) => {\n    const store = getState();\n    const weatherData = store.currentWeather.data[key] || await accuweatherAPI.currentWeather(key);\n    dispatch({ type: 'SET_WHEATHER_DATA_BY_KEY', payload: { [key]: weatherData } });\n    return weatherData;\n  },\n\n};\n","import { Card } from '@material-ui/core';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\n\nconst InnerCard = ({ className, appConfig, children }) => {\n  const useStyles = makeStyles((theme) => ({\n    innerCard: {\n      backgroundColor: `${theme.palette.innerCard[appConfig.themeType]} !important`,\n    },\n  }));\n  const classes = useStyles();\n  return <Card className={`${classes.innerCard} ${className} fgadfgdsfgdsfgkjdsfoikgjdofjg`}>{children}</Card>;\n};\n\nInnerCard.defaultProps = {\n  className: '',\n};\n\nInnerCard.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n  appConfig: PropTypes.objectOf(PropTypes.any).isRequired,\n\n};\nconst mapStateToProps = (state) => ({\n  appConfig: state.appConfig,\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InnerCard);\n","export default {\n  ADD_FAVORITE: (key, data) => ({ type: 'ADD_FAVORITE', payload: { key, data } }),\n  REMOVE_FAVORITE: (key) => ({ type: 'REMOVE_FAVORITE', payload: { key } }),\n};\n","/* prettier-ignore */\nimport React from 'react';\nimport {\n  Box,\n  Button,\n  CardMedia,\n  Divider,\n  Grid,\n  IconButton,\n  Typography,\n} from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport appConfigActions from '../../App/actions';\nimport { useStyles } from './style';\nimport weatherActions from '../../Views/Weather/actions';\nimport InnerCard from '../InnerCard';\nimport favActions from '../../Views/Favorites/actions';\n\n/* prettier-ignore */\nfunction CurrentWeather({\n  match,\n  location,\n  SET_WHEATHER_DATA_BY_KEY,\n  APP_CONFIG, CURRENT_WEATHER_STORE,\n  UPDATE_APP_CONFIG_STORE,\n  FAVORITES_STORE,\n  ADD_FAVORITE,\n  REMOVE_FAVORITE,\n}) {\n  const { locationId } = match.params;\n  const [loading, setLoading] = React.useState(false);\n  const classes = useStyles();\n\n  React.useEffect(() => {\n    const dataInit = async () => {\n      if (!locationId) return;\n      setLoading(true);\n      await SET_WHEATHER_DATA_BY_KEY(locationId);\n      setLoading(false);\n    };\n    dataInit(locationId);\n  }, [locationId, SET_WHEATHER_DATA_BY_KEY]);\n\n  const appTempUnit = APP_CONFIG.tempratureUnit;\n  const isInFavorite = !!FAVORITES_STORE[CURRENT_WEATHER_STORE.info.name];\n  const isReady = !loading && APP_CONFIG.isAppReady && CURRENT_WEATHER_STORE.info.name && CURRENT_WEATHER_STORE.data[locationId];\n  return (\n\n    <InnerCard className={classes.root}>\n      {!isReady && (\n        <Box margin=\"auto\">\n          <CircularProgress color=\"inherit\" size={75} />\n        </Box>\n      )}\n      {isReady\n        && CURRENT_WEATHER_STORE.data[locationId].map((item, i) => (\n          <Grid container spacing={3} key={i} style={{ padding: '15px' }}>\n\n            <Grid item xs={8}>\n              <Typography variant=\"subtitle2\" className=\"px-4\">\n\n                {CURRENT_WEATHER_STORE.info.name}\n\n              </Typography>\n              <Typography variant=\"subtitle1\" className=\"px-4\">\n                {moment(item.LocalObservationDateTime).format('dddd')}\n                {' '}\n                {moment(item.LocalObservationDateTime).format('HH:MM')}\n              </Typography>\n              <Typography variant=\"subtitle1\" className=\"px-4\">{item.WeatherText}</Typography>\n\n              <Grid\n                container\n                spacing={2}\n                className=\"px-4\"\n                style={{ marginTop: 'auto' }}\n                alignItems=\"center\"\n              >\n\n                <Grid item xs=\"auto\">\n                  <CardMedia\n                    className={classes.media}\n                    image={`https://developer.accuweather.com/sites/default/files/${item.WeatherIcon.toString().padStart(2, '0')}-s.png`}\n                  />\n                </Grid>\n                <Grid item xs=\"auto\">\n                  <Box display=\"flex\">\n                    <Typography variant=\"h2\" className=\"pt-1\">{Math.floor(item.Temperature[appTempUnit].Value)}</Typography>\n                    <Box display=\"flex\" height=\"max-content\">\n                      <Button\n                        disableRipple\n                        style={{ color: appTempUnit === 'Imperial' ? 'grey' : 'white' }}\n                        onClick={() => UPDATE_APP_CONFIG_STORE({ tempratureUnit: 'Metric' })}\n                        className={classes.tempUnitBtn}\n                      >\n                        °C\n                      </Button>\n                      <Divider orientation=\"vertical\" flexItem />\n                      <Button\n                        disableRipple\n                        onClick={() => UPDATE_APP_CONFIG_STORE({ tempratureUnit: 'Imperial' })}\n                        style={{ color: appTempUnit === 'Imperial' ? 'white' : 'grey' }}\n                        className={classes.tempUnitBtn}\n                      >\n                        °F\n                      </Button>\n                    </Box>\n                  </Box>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item xs=\"auto\">\n\n              <IconButton\n                disableRipple\n                className={classes.disableHover}\n                variant=\"contained\"\n                color={isInFavorite ? 'secondary' : 'default'}\n                onClick={() => (\n                  isInFavorite\n                    ? REMOVE_FAVORITE(CURRENT_WEATHER_STORE.info.name)\n                    : ADD_FAVORITE(CURRENT_WEATHER_STORE.info.name, `${location.pathname}${location.search}`))}\n              >\n                <FavoriteIcon />\n                <p className=\"mx-2\">\n                  {isInFavorite ? 'Liked' : 'Like'}\n                </p>\n\n              </IconButton>\n              {/* </Box> */}\n\n            </Grid>\n          </Grid>\n        ))}\n    </InnerCard>\n  );\n}\n\nCurrentWeather.propTypes = {\n  FAVORITES_STORE: PropTypes.objectOf(PropTypes.any).isRequired,\n  location: PropTypes.objectOf(PropTypes.any).isRequired,\n  match: PropTypes.objectOf(PropTypes.any).isRequired,\n  APP_CONFIG: PropTypes.objectOf(PropTypes.any).isRequired,\n  CURRENT_WEATHER_STORE: PropTypes.objectOf(PropTypes.any).isRequired,\n  SET_WHEATHER_DATA_BY_KEY: PropTypes.func.isRequired,\n  UPDATE_APP_CONFIG_STORE: PropTypes.func.isRequired,\n  ADD_FAVORITE: PropTypes.func.isRequired,\n  REMOVE_FAVORITE: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  CURRENT_WEATHER_STORE: state.currentWeather,\n  FAVORITES_STORE: state.favorites,\n  APP_CONFIG: state.appConfig,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  REMOVE_FAVORITE: (key) => dispatch(favActions.REMOVE_FAVORITE(key)),\n  ADD_FAVORITE: (key, data) => dispatch(favActions.ADD_FAVORITE(key, data)),\n  UPDATE_APP_CONFIG_STORE: (payload) => dispatch(appConfigActions.UPDATE_APP_CONFIG(payload)),\n  SET_WHEATHER_DATA_BY_KEY: (key) => dispatch(weatherActions.SET_WHEATHER_DATA_BY_KEY(key)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrentWeather);\n","export default {\n  ADD_FIVE_DAY_FETCH_DATA: (payload) => ({ type: 'ADD_FIVE_DAY_FETCH_DATA', payload }),\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    height: 140,\n    width: 100,\n  },\n  control: {\n    padding: theme.spacing(2),\n  },\n}));\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nconst convert = require('convert-units');\n\nconst useStyles = makeStyles({\n  media: {\n    backgroundSize: 'auto',\n    width: '47px',\n    height: '45px',\n  },\n  weatherInfo: {\n    margin: '10px',\n  },\n  root: {\n    borderRadius: 0,\n    maxWidth: 185,\n    minWidth: 185,\n  },\n  unitText: {\n    margin: '3px 5px',\n  },\n});\n\nfunction ForcastCard(props) {\n  const { item } = props;\n  const tempCumpute = (temp) => Math.floor(props.appConfig.tempratureUnit === 'Imperial' ? convert(temp).from('C').to('F') : temp);\n  const tempratureUnit = `°${props.appConfig.tempratureUnit === 'Imperial' ? 'F' : 'C'}`;\n  const classes = useStyles();\n\n  return (\n    item && (\n      <Grid container className={classes.root}>\n        <Grid item xs={12}>\n          <Typography variant=\"h6\" color=\"textSecondary\" style={{marginTop: '10px'}}>\n            {' '}\n            {moment(item.Date).format('dddd')}\n            {' '}\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Typography variant=\"h6\" component=\"h2\">\n            {item.Day.IconPhrase}\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Box marginTop=\"10px\">\n            <CardMedia className={classes.media} image={`https://developer.accuweather.com/sites/default/files/${item.Day.Icon.toString().padStart(2, '0')}-s.png`} />\n          </Box>\n        </Grid>\n        <Grid container item xs={12} className={classes.weatherInfo}>\n\n          <Grid item xs={12} sm={12}>\n            <Box display=\"flex\" justifyContent=\"space-between\">\n              <Box display=\"flex\">\n                <Typography variant=\"h4\">\n                  {tempCumpute(item.Temperature.Maximum.Value)}\n                </Typography>\n                <Typography variant=\"h5\" className={classes.unitText}>\n                  {tempratureUnit}\n                </Typography>\n              </Box>\n              <Box display=\"flex\">\n                <Typography variant=\"h4\" color=\"textSecondary\">\n                  {tempCumpute(item.Temperature.Minimum.Value)}\n                </Typography>\n                <Typography variant=\"h5\" color=\"textSecondary\" className={classes.unitText}>\n                  {tempratureUnit}\n                </Typography>\n              </Box>\n            </Box>\n          </Grid>\n        </Grid>\n      </Grid>\n    )\n  );\n}\n\nForcastCard.propTypes = {\n  item: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  appConfig: state.appConfig,\n});\n\nexport default connect(mapStateToProps)(ForcastCard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles(() => ({\n  root: {\n    padding: '17px',\n    height: 'max-content',\n  },\n}));\n\nexport const GridContainer = ({ children }) => {\n  const classes = useStyles();\n  return (\n    <Card className={`${classes.root}`}>\n      <Grid container spacing={3}>\n        {children.map((node, i) => (\n          <Grid item xs={12} key={i}>\n            {node}\n          </Grid>\n        ))}\n      </Grid>\n    </Card>\n  );\n};\n\nGridContainer.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.node).isRequired,\n\n};\n","import Box from '@material-ui/core/Box';\nimport { connect } from 'react-redux';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Typography } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { accuweatherAPI } from '../../services/API/accuweather';\nimport fiveDaysActions from './actions';\nimport { useStyles } from './style';\nimport InnerCard from '../InnerCard';\nimport ForcastCard from '../ForcastCard/ForcastCard';\nimport { GridContainer } from '../GridContainer';\n\nfunction sleep(delay = 0) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction DailyForecasts({ match, fiveDay, ADD_FIVE_DAY_FETCH_DATA }) {\n  const classes = useStyles();\n  const { locationId } = match.params;\n  const [loading, setLoading] = React.useState(false);\n  const [fiveDaysForecastsItems, setFiveDaysForecastsItems] = React.useState( null, );\n\n  React.useEffect(() => {\n    const dataInit = async () => {\n      setLoading(true);\n      // Fetching 5 Days of Daily Forecasts according to the locationId from the route, first trying to get data from redux store, if not exsit fetching from the server\n      const fiveDaysFetch = fiveDay[locationId] || (await accuweatherAPI.fiveDays(locationId));\n      if (fiveDaysFetch.DailyForecasts) {\n        setFiveDaysForecastsItems(fiveDaysFetch.DailyForecasts);\n        ADD_FIVE_DAY_FETCH_DATA({ ...fiveDay, [locationId]: fiveDaysFetch, });\n      }\n      setLoading(false);\n    };\n    dataInit();\n  }, [locationId]);\n\n  return (\n    <GridContainer>\n      <InnerCard>\n        <Grid container style={{ padding: '15px' }}>\n          <Grid item>\n            <Typography variant=\"h5\">Weekly Report</Typography>\n            {/* <Typography variant=\"h5\"> some info</Typography> */}\n          </Grid>\n        </Grid>\n      </InnerCard>\n      <InnerCard className={classes.root}>\n        {loading ? (\n          <Grid item xs=\"auto\">\n            <Box\n              display=\"flex\"\n              justifyContent=\"center\"\n              height={177}\n              alignItems=\"center\"\n            >\n              <CircularProgress color=\"inherit\" size={80} />\n            </Box>\n          </Grid>\n        ) : (\n          <Grid item xs=\"auto\">\n            <Grid container justify=\"center\" direction=\"row\">\n              {fiveDaysForecastsItems\n                && fiveDaysForecastsItems.map((item, i) => (\n                  <Grid key={i} item md=\"auto\" xs=\"auto\" lg=\"auto\">\n                    <Box display=\"flex\" justifyContent=\"center\">\n                      <ForcastCard item={item} />\n                    </Box>\n                  </Grid>\n                ))}\n            </Grid>\n          </Grid>\n        )}\n      </InnerCard>\n    </GridContainer>\n  );\n}\n\nDailyForecasts.propTypes = {\n  ADD_FIVE_DAY_FETCH_DATA: PropTypes.func.isRequired,\n  match: PropTypes.objectOf(PropTypes.any).isRequired,\n  fiveDay: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  appConfig: state.appConfig,\n  fiveDay: state.fiveDay,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  ADD_FIVE_DAY_FETCH_DATA: (payload) => dispatch(fiveDaysActions.ADD_FIVE_DAY_FETCH_DATA(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DailyForecasts);\n","import React from 'react';\n\nexport const util = {\n  useDebounce: (value, delay, callback) => {\n    // State and setters for debounced value\n    const [debouncedValue, setDebouncedValue] = React.useState(value);\n\n    React.useEffect(\n      () => {\n        // Update debounced value after delay\n        const handler = setTimeout(() => {\n          setDebouncedValue(value);\n          if (callback) callback(value);\n        }, delay);\n\n        // Cancel the timeout if value changes (also on delay change or unmount)\n        // This is how we prevent debounced value from updating if value is changed ...\n        // .. within the delay period. Timeout gets cleared and restarted.\n\n        return () => {\n          clearTimeout(handler);\n        };\n      },\n      [value, delay], // Only re-call effect if value or delay changes\n    );\n\n    return debouncedValue;\n  },\n  sleep: (delay = 0) => new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  }),\n};\n","import { accuweatherAPI } from '../../services/API/accuweather';\nimport autocompleteDataJson from '../../data/cities_autocomplete.json';\n\nexport default {\n  SET_AUTOCOMPLETE_DATA_BY_QUERY: (query) => async (dispatch, getState) => {\n    const store = getState();\n    const autocompleteData =  store.autocomplete.data[query] || await accuweatherAPI.autocompleteCities(query);\n    dispatch({ type: 'SET_AUTOCOMPLETE_DATA_BY_QUERY', payload: { [query]: autocompleteData } });\n    return autocompleteData;\n  },\n};\n","// *https://www.registers.service.gov.uk/registers/country/use-the-api*\n// import fetch from \"cross-fetch\";\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\nimport { useLocation } from 'react-router-dom';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { Paper } from '@material-ui/core';\nimport { util } from '../../services/util';\nimport './WeatherAutocomplete.scss';\nimport autocompleteActions from './actions';\n\nconst useQuery = () => new URLSearchParams(useLocation().search);\n/* prettier-ignore */\n\nfunction HeroloAutocomplete({\n  match,\n  history,\n  CURRENT_WEATHER_STORE,\n  APP_CONFIG_STORE,\n  SET_AUTOCOMPLETE_DATA_BY_QUERY,\n  AUTOCOMPLETE_STORE,\n  UPDATE_CURRENT_WEATHER_INFO,\n}) {\n  const useStyles = makeStyles((theme) => ({\n\n    root: {\n      backgroundColor: theme.palette.outterCard[APP_CONFIG_STORE.themeType],\n      padding: '2px 4px',\n      display: 'flex',\n      alignItems: 'center',\n    },\n\n    icon: {\n      marginRight: theme.spacing(2),\n    },\n\n  }));\n\n  const query = useQuery();\n  const URL_SEARCH_QUERY = query.get('search');\n\n  const [fetchQuery, setFetchQuery] = React.useState(null);\n  const [input, setInput] = React.useState('');\n  const [loading, setLoading] = React.useState(false);\n  const [open, setOpen] = React.useState(false);\n  const [value, setValue] = React.useState(null);\n  const { locationId } = match.params;\n\n  const handleInputChange = (event, inputVal) => {\n    if (event && event.type === 'blur') return;\n    setInput(inputVal || '');\n    if (event && event.type === 'change') {\n      setFetchQuery(inputVal);\n    }\n  };\n\n  const setNewVal = (newVal) => {\n    if (!newVal) return;\n    history.push(`/weather/${newVal.Key}/?search=${newVal.LocalizedName}`);\n    UPDATE_CURRENT_WEATHER_INFO({\n      name: `${newVal.LocalizedName}${newVal.Country ? `, ${newVal.Country.LocalizedName}` : ''}`,\n      key: newVal.Key,\n    });\n\n    setValue(newVal);\n  };\n\n  const onComponentMount = async () => {\n    setInput(URL_SEARCH_QUERY || '');\n    setFetchQuery(URL_SEARCH_QUERY || '');\n    const fetchItems = await SET_AUTOCOMPLETE_DATA_BY_QUERY(URL_SEARCH_QUERY);\n    if (locationId) {\n      // If there is locationId in the route we wants to select it from the items we fetched to the autocomplete\n      const itemInOptions = fetchItems.find((option) => option.Key === locationId);\n      setNewVal(itemInOptions);\n    }\n  };\n\n  React.useEffect(() => {\n    const curWeatherName = CURRENT_WEATHER_STORE.info.name;\n    if (CURRENT_WEATHER_STORE.info.name) setInput(curWeatherName);\n  }, [CURRENT_WEATHER_STORE]);\n\n  // On Mounted\n  React.useEffect(() => {\n    onComponentMount();\n  }, []);\n\n  util.useDebounce(fetchQuery, 1000, async () => {\n    if (fetchQuery && fetchQuery.length > 1) {\n      setLoading(true);\n      await SET_AUTOCOMPLETE_DATA_BY_QUERY(fetchQuery);\n      setLoading(false);\n    }\n  });\n  const classes = useStyles();\n  return (\n\n    <Autocomplete\n      className=\"WeatherAutocomplete--main-container\"\n      onInputChange={handleInputChange}\n      onChange={(event, newVal) => setNewVal(newVal)}\n      getOptionLabel={(option) => `${option.LocalizedName}, ${option.Country ? option.Country.LocalizedName : ''}`}\n      value={value}\n      inputValue={input}\n      options={AUTOCOMPLETE_STORE.data[fetchQuery] || []}\n      loading={loading}\n      margin=\"dense\"\n      getOptionSelected={(option, optionValue) => optionValue && option && option.Key === optionValue.Key}\n      open={open}\n      onOpen={() => { setOpen(true); }}\n      onClose={() => { setOpen(false); }}\n      renderOption={(option) => (\n        <Grid container alignItems=\"center\" className=\"asdsadlfgjoedfikghjokdfsghj\">\n          <Grid item>\n            <LocationOnIcon className={classes.icon} />\n          </Grid>\n          <Grid item xs>\n            <Typography variant=\"body2\">{`${option.LocalizedName}, ${option.Country.LocalizedName}`}</Typography>\n          </Grid>\n        </Grid>\n      )}\n      renderInput={(params) => (\n        <Paper component=\"form\" className={classes.root}>\n          <TextField\n            className=\"WeatherAutocomplete--input\"\n            {...params}\n            autoFocus\n            placeholder=\"Select Location\"\n            variant=\"outlined\"\n            InputProps={{\n              ...params.InputProps,\n              startAdornment: (<SearchIcon className=\"mr-1\" />),\n              endAdornment: (\n                <>\n                  {loading ? (\n                    <CircularProgress color=\"inherit\" size={20} />\n                  ) : null}\n\n                  {params.InputProps.endAdornment}\n                </>),\n            }}\n          />\n        </Paper>\n      )}\n    />\n  );\n}\nHeroloAutocomplete.propTypes = {\n  match: PropTypes.objectOf(PropTypes.any).isRequired,\n  history: PropTypes.objectOf(PropTypes.any).isRequired,\n  CURRENT_WEATHER_STORE: PropTypes.objectOf(PropTypes.any).isRequired,\n  APP_CONFIG_STORE: PropTypes.objectOf(PropTypes.any).isRequired,\n  AUTOCOMPLETE_STORE: PropTypes.objectOf(PropTypes.any).isRequired,\n  SET_AUTOCOMPLETE_DATA_BY_QUERY: PropTypes.func.isRequired,\n  UPDATE_CURRENT_WEATHER_INFO: PropTypes.func.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  CURRENT_WEATHER_STORE: state.currentWeather,\n  APP_CONFIG_STORE: state.appConfig,\n  AUTOCOMPLETE_STORE: state.autocomplete,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  UPDATE_CURRENT_WEATHER_INFO: (payload) => dispatch({ type: 'UPDATE_CURRENT_WEATHER_INFO', payload }),\n  SET_AUTOCOMPLETE_DATA_BY_QUERY: (query) => dispatch(autocompleteActions.SET_AUTOCOMPLETE_DATA_BY_QUERY(query)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HeroloAutocomplete);\n","import {\n  Box, Button, Grid, Typography,\n} from '@material-ui/core';\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport geolocation from 'geolocation';\nimport { connect } from 'react-redux';\nimport HeroloAutocomplete from '../../../components/HeroloAutocomplete/HeroloAutocomplete';\nimport weatherActions from '../actions';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%',\n  },\n  locateMeButton: {\n    backgroundColor: '#0069d9',\n    outline: 'none',\n    '&:focus': {\n      outline: 'none',\n    },\n  },\n  autocomplete: {\n    flexGrow: '1',\n  },\n}));\n\nfunction WelcomeSearch(props) {\n  const classes = useStyles();\n\n  const handleLocateMeButton = async () => {\n    geolocation.getCurrentPosition(async (err, position) => {\n      if (err) throw err;\n      const data = await props.SET_WHEATHER_DATA_BY_GEOLOCATION(position.coords.latitude, position.coords.longitude);\n      props.history.push(`/weather/${data.locationData.Key}/?search=${data.locationData.LocalizedName}`);\n      // props.history.push(`/weather/${newVal.Key}/?search=${newVal.LocalizedName}` );\n    });\n  };\n  /* prettier-ignore */\n  return (\n    <Grid container className={classes.root}>\n\n      <Grid item xs={12}>\n        <Typography color=\"textPrimary\" variant=\"h4\">\n          Hello there Herolo.\n        </Typography>\n      </Grid>\n\n      <Grid item xs={12}>\n        <Typography color=\"textPrimary\" variant=\"h5\" gutterBottom>\n          Welcome to my weather application.\n        </Typography>\n      </Grid>\n\n      <Grid item xs={12}>\n        <Typography color=\"textPrimary\" m={2} variant=\"subtitle2\" gutterBottom>\n          The Application is Fully responsive,Fully Route integrated, Local Storaged, State Mangement, Uses Axios cancel tokens for preventing old async fetch calls that can override the data, auto Geolocation if possible, and autocomplete with 1000ms debounce. And featured with Dark/Light mode theme. I had great time making it for you.\n        </Typography>\n        <Typography color=\"textPrimary\" m={2} variant=\"subtitle2\" gutterBottom>\n          Thanks for your time and Hope you will enjoy :)\n          {' '}\n        </Typography>\n      </Grid>\n\n      <Grid item xs={12} style={{ marginTop: 'auto' }}>\n        <Grid container spacing={2}>\n\n          <Grid item xs={12} md={12} lg=\"auto\" className={classes.autocomplete}>\n            <Route component={HeroloAutocomplete} />\n          </Grid>\n\n          <Grid item xs={12} md={12} lg=\"auto\">\n            <Box display=\"flex\" height=\"100%\">\n              <Button color=\"primary\" variant=\"contained\" className={classes.locateMeButton} onClick={handleLocateMeButton}> Locate Me </Button>\n            </Box>\n          </Grid>\n\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\nconst mapStateToProps = (state) => ({ });\n\nconst mapDispatchToProps = (dispatch) => ({\n  SET_WHEATHER_DATA_BY_GEOLOCATION: (lat, lon) => dispatch(weatherActions.SET_WHEATHER_DATA_BY_GEOLOCATION(lat, lon)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WelcomeSearch);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CardMedia, Container, Typography } from '@material-ui/core';\nimport CurrentWeather from '../../components/CurrentWeather/CurrentWeather';\nimport FiveDailyForecasts from '../../components/FiveDailyForecasts/FiveDailyForecasts';\nimport WelcomeSearch from './components/WelcomeSearch';\nimport InnerCard from '../../components/InnerCard';\nimport { GridContainer } from '../../components/GridContainer';\n\nfunction Weather() {\n  const useStyles = makeStyles(() => ({\n    weatherTitleIcon: {\n      width: '40px',\n      height: '100%',\n      marginRight: '10px',\n    },\n    root: {\n      width: '100%',\n      margin: '0 auto',\n      maxWidth: '1060px',\n    },\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <Container maxWidth=\"md\" className={classes.root}>\n      <Grid container className={classes.root} spacing={3}>\n        <Grid item xs={12} md={6}>\n          <Route component={WelcomeSearch} />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <GridContainer>\n            <InnerCard>\n              <Grid container style={{ padding: '15px' }}>\n                <Grid item>\n                  <CardMedia\n                    className={classes.weatherTitleIcon}\n                    image=\"https://www.iconfinder.com/data/icons/weather-flat-14/64/weather02-512.png\"\n                  />\n                </Grid>\n                <Grid item>\n                  <Typography variant=\"h5\">Total Weather Report</Typography>\n                </Grid>\n              </Grid>\n            </InnerCard>\n            <Route\n              path=\"/weather/:locationId?/\"\n              component={CurrentWeather}\n            />\n          </GridContainer>\n        </Grid>\n        <Grid item xs={12}>\n          <Route\n            path=\"/weather/:locationId?/\"\n            component={FiveDailyForecasts}\n          />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  appConfig: state.appConfig,\n});\n\nexport default connect(mapStateToProps)(Weather);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Card, Grid } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport { connect } from 'react-redux';\nimport favAcations from './actions';\n\nfunction Favorites(props) {\n  const useStyles = makeStyles(() => ({\n    favList: {\n      maxHeight: '65vh',\n      overflowY: 'auto',\n    },\n    root: {\n      margin: '0 auto',\n      width: '100%',\n      maxWidth: '957px',\n    },\n  }));\n\n  React.useEffect(() => {\n    localStorage.setItem(\n      'FAVORITES_STORE',\n      JSON.stringify(props.FAVORITES_STORE),\n    );\n  }, [props.FAVORITES_STORE]);\n\n  const classes = useStyles();\n  return (\n    <Grid container className={classes.root} spacing={3}>\n      <Grid item xs={12}>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <Card>\n              <Typography variant=\"h5\" className=\"px-4 py-3\">\n                Favorites\n              </Typography>\n            </Card>\n          </Grid>\n          <Grid item xs={12}>\n            <Card className={classes.favList}>\n              <List component=\"nav\" aria-label=\"main mailbox folders\">\n                { Object.keys(props.FAVORITES_STORE).length === 0 && (\n                <ListItem>\n                  <ListItemText primary=\"Nothing to show :(\" />\n                </ListItem>\n                )}\n                {Object.keys(props.FAVORITES_STORE).map((key, i) => (\n\n                  <ListItem button key={i}>\n                    <ListItemIcon onClick={() => props.REMOVE_FAVORITE(key)}>\n                      <DeleteIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary={key}\n                      onClick={() => props.history.push(props.FAVORITES_STORE[key])}\n                    />\n                  </ListItem>\n                ))}\n              </List>\n            </Card>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  appConfig: state.appConfig,\n  FAVORITES_STORE: state.favorites,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  REMOVE_FAVORITE: (key) => dispatch(favAcations.REMOVE_FAVORITE(key)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Favorites);\n","import React from 'react';\nimport { Switch, Route, useLocation, Redirect, } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Container } from '@material-ui/core';\nimport geolocation from 'geolocation';\nimport PropTypes from 'prop-types';\nimport { useStyles } from './style';\nimport HeroloTabs from '../components/HeroloTabs/HeroloTabs';\nimport Weather from '../Views/Weather/Weather';\nimport Favorites from '../Views/Favorites/Favorites';\nimport appConfigActions from './actions';\nimport weatherActions from '../Views/Weather/actions';\n\nconst useQuery = () => new URLSearchParams(useLocation().search);\n\nexport const AppRouter = ({\n  match, history, SET_WHEATHER_DATA_BY_GEOLOCATION, UPDATE_APP_CONFIG_STORE, UPDATE_CURRENT_WEATHER_INFO,\n}) => {\n  const classes = useStyles();\n  const query = useQuery();\n  const URL_ROUTE_VALID = (match.params.locationId && query.get('search'));\n\n  React.useEffect(() => {\n    if (URL_ROUTE_VALID) {\n      UPDATE_CURRENT_WEATHER_INFO({\n        name: query.get('search'),\n        key: match.params.locationId,\n      });\n      UPDATE_APP_CONFIG_STORE({ isAppReady: true });\n    }\n  }, []);\n\n  React.useEffect(() => {\n    const dataInit = async () => {\n      const geolocationPermission = await navigator.permissions.query({ name: 'geolocation' });\n\n      if (geolocationPermission.state === 'granted' && !URL_ROUTE_VALID) {\n        geolocation.getCurrentPosition(async (err, position) => {\n          if (err) { throw err; }\n          const data = await SET_WHEATHER_DATA_BY_GEOLOCATION(position.coords.latitude, position.coords.longitude);\n          history.push(`/weather/${data.locationData.Key}/?search=${data.locationData.LocalizedName}`);\n        });\n      }\n\n      // defualt location to TLV if geoloaction is not enabled\n      else {\n        const data = await SET_WHEATHER_DATA_BY_GEOLOCATION('32.045', '34.77');\n        history.push(`/weather/${data.locationData.Key}/?search=${data.locationData.LocalizedName}`);\n      }\n    };\n    UPDATE_APP_CONFIG_STORE({ isAppReady: true });\n    if (!URL_ROUTE_VALID) dataInit();\n  }, [URL_ROUTE_VALID]);\n\n  return (\n    <Container className={classes.root} maxWidth={false}>\n      <Route path=\"/:tab/:locationId?\" render={(url) => <HeroloTabs url={url} />} />\n      <Switch>\n        <Route path=\"/weather/:locationId?\" component={Weather} />\n        <Route path=\"/favorites\" component={Favorites} />\n        <Redirect exact to=\"/weather\" />\n      </Switch>\n    </Container>\n  );\n};\n\nAppRouter.propTypes = {\n  UPDATE_APP_CONFIG_STORE: PropTypes.func.isRequired,\n  UPDATE_CURRENT_WEATHER_INFO: PropTypes.func.isRequired,\n  SET_WHEATHER_DATA_BY_GEOLOCATION: PropTypes.func.isRequired,\n  match: PropTypes.objectOf(PropTypes.any).isRequired,\n  history: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  appConfig: state.appConfig,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  UPDATE_CURRENT_WEATHER_INFO: (payload) => dispatch({ type: 'UPDATE_CURRENT_WEATHER_INFO', payload }),\n  SET_WHEATHER_DATA_BY_GEOLOCATION: (lat, lon) => dispatch(weatherActions.SET_WHEATHER_DATA_BY_GEOLOCATION(lat, lon)),\n  UPDATE_APP_CONFIG_STORE: (payload) => dispatch(appConfigActions.UPDATE_APP_CONFIG(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppRouter);\n","import './App.css';\nimport React from 'react';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { CardMedia } from '@material-ui/core';\nimport { theme } from '../plugins/material-ui';\nimport AppRoutesContainer from './AppRoutesContainer';\n\nfunction App(props) {\n  return (\n    <MuiThemeProvider theme={theme(props)}>\n      <CardMedia\n        className=\"app--bg-image\"\n        image=\"https://www.wallpaperflare.com/static/656/666/467/landscape-mountains-clouds-forest-wallpaper.jpg\"\n      />\n      <Router>\n        <Route path=\"/:tab?/:locationId?\" component={AppRoutesContainer} />\n      </Router>\n    </MuiThemeProvider>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  appConfig: state.appConfig,\n});\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport './index.css';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}