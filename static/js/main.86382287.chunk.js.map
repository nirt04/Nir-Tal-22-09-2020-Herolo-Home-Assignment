{"version":3,"sources":["redux/store.js","redux/reducers/locationReducer.js","redux/reducers/fiveDayReducer.js","redux/reducers/favoritesReducer.js","redux/reducers/errorReducer.js","redux/reducers/currentWeatherReducer.js","redux/reducers/autocompleteReducer.js","redux/reducers/appConfigReducer.js","plugins/material-ui.js","App/actions.js","components/HeroloTabs/HeroloTabs.js","services/util.js","services/HTTP.js","services/API/accuweather.js","components/HeroloAutocomplete/actions.js","components/HeroloAutocomplete/HeroloAutocomplete.js","components/InnerCard.js","components/CurrentWeather/style.js","Views/Weather/actions.js","components/CurrentWeather/CurrentWeather.js","components/ForcastCard/ForcastCard.js","components/FiveDailyForecasts/actions.js","components/FiveDailyForecasts/style.js","components/GridContainer.js","components/FiveDailyForecasts/FiveDailyForecasts.js","Views/Weather/components/WelcomeSearch.js","Views/Weather/Weather.js","Views/Favorites/Favorites.js","App/style.js","App/App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","location","state","lat","lon","asked","action","type","data","fiveDay","payload","favorites","Map","a","set","name","d","delete","error","status","currentWeather","info","key","autocomplete","appConfig","themeType","tempratureUnit","isAppReady","store","createStore","applyMiddleware","thunk","theme","props","createMuiTheme","palette","test1","main","test2","background","paper","innerCard","light","dark","outterCard","breakpoints","values","xs","sm","md","lg","xl","test","useStyles","makeStyles","root","display","flexDirection","alignItems","padding","flexGrow","backgroundColor","primary","connect","dispatch","updateAppConfig","appConfigActions","React","useState","isDark","setIsDark","tabProps","index","tabName","locationId","url","match","params","query","search","id","label","value","to","component","Link","classes","setValue","useEffect","tab","AppBar","position","className","Tabs","onChange","event","newValue","aria-label","Tab","Switch","checked","target","color","inputProps","util","delay","callback","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","Promise","resolve","CancelToken","axios","cancelTokens","HTTP","create","baseURL","withCredentials","headers","Accept","apikey","interceptors","request","use","config","reject","response","console","log","route","cancelToken","get","c","then","res","catch","err","accuweatherAPI","loactionId","isMetric","language","details","metric","searchQuery","q","getState","autocompleteDataJson","autocompleteData","APP_CONFIG_STORE","AUTOCOMPLETE_STORE","UPDATE_CURRENT_WEATHER_INFO","SET_AUTOCOMPLETE_DATA_BY_QUERY","autocompleteActions","icon","marginRight","spacing","URL_SEARCH_QUERY","URLSearchParams","useLocation","fetchQuery","setFetchQuery","input","setInput","loading","setLoading","open","setOpen","setItems","setNewVal","newVal","undefined","history","push","Key","LocalizedName","Country","onComponentMount","fetchItems","itemInOptions","find","option","Autocomplete","onInputChange","inputVal","getOptionLabel","inputValue","options","margin","getOptionSelected","onOpen","onClose","renderOption","Grid","container","item","Typography","variant","renderInput","Paper","TextField","autoFocus","placeholder","InputProps","startAdornment","endAdornment","Fragment","CircularProgress","size","Card","children","tempUnitBtn","paddingTop","minWidth","outline","media","backgroundSize","width","height","minHeight","SET_WHEATHER_DATA_BY_GEOLOCATION","current_weather","weatherData","CURRENT_WEATHER_STORE","APP_CONFIG","SET_WHEATHER_DATA_BY_KEY","weatherActions","dataInit","appTempUnit","isReady","Box","map","i","style","moment","LocalObservationDateTime","format","WeatherText","marginTop","CardMedia","image","WeatherIcon","toString","padStart","Math","floor","Temperature","Value","Button","disableRipple","onClick","Divider","orientation","flexItem","convert","require","weatherInfo","borderRadius","maxWidth","unitText","tempCumpute","temp","from","gutterBottom","align","Date","Day","Icon","IconPhrase","justifyContent","Maximum","Minimum","actions","control","GridContainer","childrens","child","sleep","ADD_FIVE_DAY_FETCH_DATA","fiveDaysForecastsItems","setFiveDaysForecastsItems","FIVE_DAYS_DATA","fiveDaysFetch","DailyForecasts","justify","direction","WelcomeSearch","mt","m","HeroloAutocomplete","weatherTitleIcon","Container","path","CurrentWeather","FiveDailyForecasts","ListItemLink","ListItem","button","favList","maxHeight","overflowY","List","ListItemIcon","ListItemText","href","appInit","navigator","permissions","geolocation","getCurrentPosition","render","Weather","Favorites","exact","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.86382287.chunk.js","sourcesContent":["import thunk from 'redux-thunk'\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport { locationReducer } from './reducers/locationReducer'\r\nimport { fiveDayReducer } from './reducers/fiveDayReducer'\r\nimport { favoritesReducer } from './reducers/favoritesReducer'\r\nimport { errorReducer } from './reducers/errorReducer'\r\nimport { currentWeatherReducer } from './reducers/currentWeatherReducer'\r\nimport { autocompleteReducer } from './reducers/autocompleteReducer'\r\nimport { appConfigReducer } from './reducers/appConfigReducer'\r\n\r\nconst reducer = combineReducers({\r\n  location: locationReducer,\r\n  fiveDay: fiveDayReducer,\r\n  favorites: favoritesReducer,\r\n  error: errorReducer,\r\n  currentWeather: currentWeatherReducer,\r\n  autocomplete: autocompleteReducer,\r\n  appConfig: appConfigReducer,\r\n  \r\n})\r\n\r\nexport const store = createStore(reducer, applyMiddleware(thunk))","export const locationReducer = (\n  state = { lat: 32.045, lon: 34.77, asked: false },\n  action\n) => {\n  switch (action.type) {\n    case \"SET_LOCATION\":\n      return action.data;\n    default:\n      return state;\n  }\n};\n","export const fiveDayReducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"ADD_FIVE_DAY_FETCH_DATA\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","export const favoritesReducer = (state = new Map(), action) => {\n  switch (action.type) {\n    case \"ADD_favorites\":\n      const a = new Map(state);\n      a.set(action.data.name, action.data);\n      return a;\n    case \"REMOVE_favorites\":\n      const d = new Map(state);\n      d.delete(action.data.name);\n      return d;\n    default:\n      return state;\n  }\n};\n","export const errorReducer = (state = { status: false }, action) => {\n  switch (action.type) {\n    case \"SET_ERROR\":\n      return action.data;\n    default:\n      return state;\n  }\n};\n","export const currentWeatherReducer = (\r\n  state = {\r\n    data: {},\r\n    info: {\r\n        name: null,\r\n        key: null,\r\n    }\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"SET_WHEATHER_DATA_BY_GEOLOCATION\":\r\n      return { ...state, data: { ...state.data, ...action.payload } };\r\n    case \"SET_WHEATHER_DATA_BY_KEY\":\r\n      return { ...state, data: { ...state.data, ...action.payload } };\r\n    case \"UPDATE_CURRENT_WEATHER_INFO\":\r\n      return { ...state, info: { ...state.info, ...action.payload } };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const autocompleteReducer = (\r\n  state = {\r\n    data: {},\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"SET_AUTOCOMPLETE_DATA_BY_QUERY\":\r\n      return { ...state, data: { ...state.data, ...action.payload } };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const appConfigReducer = (\r\n  state = {\r\n    themeType: 'dark',\r\n    tempratureUnit: \"Metric\",\r\n    isAppReady: false,\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"UPDATE_APP_CONFIG\":\r\n      return { ...state, ...action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nexport const theme = (props) =>\r\n  createMuiTheme({\r\n    palette: {\r\n      test1: {\r\n        main: \"red\",\r\n      },\r\n      test2: {\r\n        main: \"blue\",\r\n      },\r\n      type: props.appConfig.themeType,\r\n      background: {\r\n        paper: props.appConfig.themeType == \"dark\" ? \"#3810ae\" : \"#FFFF\",\r\n      },\r\n      innerCard: {\r\n        light: \"#FFFF\",\r\n        dark: \"#461eb7\",\r\n      },\r\n      outterCard: {\r\n        light: \"#FFFF\",\r\n        dark: \"#3810ae\",\r\n      },\r\n    },\r\n    breakpoints: {\r\n      // Define custom breakpoint values.\r\n      // These will apply to Material-UI components that use responsive\r\n      // breakpoints, such as `Grid` and `Hidden`. You can also use the\r\n      // theme breakpoint functions `up`, `down`, and `between` to create\r\n      // media queries for these breakpoints\r\n      values: { xs: 0, sm: 450, md: 600, lg: 900, xl: 1200, test: 1120 },\r\n    },\r\n  });\r\n","export default {\r\n  UPDATE_APP_CONFIG: (payload) => {\r\n    return { type: \"UPDATE_APP_CONFIG\", payload: payload };\r\n  },\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport { connect } from \"react-redux\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Switch } from \"@material-ui/core\";\r\nimport appConfigActions from \"../../App/actions\"\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    padding: 0,\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.primary,\r\n  },\r\n}));\r\n\r\nfunction HeroloTabs(props) {\r\n  const [isDark, setIsDark] = React.useState( props.appConfig.themeType === \"dark\" );\r\n\r\n  const handleSwitchChange = (event) => {\r\n    props.updateAppConfig({ themeType: event.target.checked ? 'dark' : 'light'});\r\n    setIsDark( event.target.checked );\r\n  };\r\n\r\n  const handleTabChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const tabProps = (index, tabName) => {\r\n    const locationId = props.url.match.params.locationId;\r\n    const query = props.url.location.search;\r\n    return {\r\n      id: `simple-tab-${index}`,\r\n      \"aria-controls\": `simple-tabpanel-${index}`,\r\n      label: tabName,\r\n      value: tabName,\r\n      to: `/${tabName}${locationId ? \"/\" + locationId : \"\"}/${query}`,\r\n      component: Link,\r\n    };\r\n  };\r\n\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(null);\r\n\r\n  React.useEffect(() => {\r\n    setValue(props.url.match.params.tab);\r\n  }, [props.url.match.params.tab]);\r\n\r\n  return (\r\n    // <div className={classes.root}>\r\n    <AppBar position=\"static\" className={classes.root}>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleTabChange}\r\n        aria-label=\"simple tabs example\"\r\n      >\r\n        <Tab {...tabProps(0, \"weather\")} />\r\n        <Tab {...tabProps(1, \"favorites\")} />\r\n      </Tabs>\r\n      <Switch\r\n        className=\"ml-auto\"\r\n        checked={isDark}\r\n        onChange={handleSwitchChange}\r\n        color=\"primary\"\r\n        inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n      />\r\n    </AppBar>\r\n    // </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    appConfig: state.appConfig,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateAppConfig: (payload) => dispatch(appConfigActions.UPDATE_APP_CONFIG(payload)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeroloTabs);\r\n","import React from \"react\";\r\n\r\nexport const util = {\r\n  useDebounce: (value, delay, callback) => {\r\n    // State and setters for debounced value\r\n    const [debouncedValue, setDebouncedValue] = React.useState(value);\r\n\r\n    React.useEffect(\r\n      () => {\r\n        // Update debounced value after delay\r\n        const handler = setTimeout(() => {\r\n          setDebouncedValue(value);\r\n          if (callback) callback(value);\r\n        }, delay);\r\n\r\n        // Cancel the timeout if value changes (also on delay change or unmount)\r\n        // This is how we prevent debounced value from updating if value is changed ...\r\n        // .. within the delay period. Timeout gets cleared and restarted.\r\n\r\n        return () => {\r\n          clearTimeout(handler);\r\n        };\r\n      },\r\n      [value, delay] // Only re-call effect if value or delay changes\r\n    );\r\n\r\n    return debouncedValue;\r\n  },\r\n  sleep: (delay = 0) => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(resolve, delay);\r\n    });\r\n  },\r\n};\r\n","import axios from \"axios\";\r\nconst CancelToken = axios.CancelToken;\r\nconst cancelTokens = {};\r\n\r\nconst HTTP = axios.create({\r\n  baseURL: \"http://dataservice.accuweather.com/\",\r\n  withCredentials: false,\r\n  headers: {\r\n    Accept: \"application/json\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n  params: {\r\n    apikey: \"JpXZNXKBXpKo5VVG0RZzybpKahdMX8vv\",\r\n  },\r\n});\r\n\r\nconst get = (route, params, config = {}) => {\r\n  return new Promise((resolve, reject) => {\r\n    if (cancelTokens[config.cancelToken]) cancelTokens[config.cancelToken](\"Request canceled.\");\r\n\r\n    HTTP.get(route, {\r\n      params,\r\n      cancelToken: config.cancelToken ? new CancelToken((c) => (cancelTokens[config.cancelToken] = c)) : null,\r\n    })\r\n      .then((res) => {\r\n        resolve(res.data);\r\n      })\r\n      .catch((err) => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nconst post = async (route, params) => {\r\n  return new Promise((resolve, reject) => {\r\n    HTTP.post(route, params).then((res) => {\r\n      resolve(res);\r\n    });\r\n  });\r\n};\r\n\r\nconst put = async (route, params) => {\r\n  return new Promise((resolve, reject) => {\r\n    HTTP.put(route, params).then((res) => {\r\n      resolve(res);\r\n    });\r\n  });\r\n};\r\n\r\n// request interceptor\r\nHTTP.interceptors.request.use(\r\n  (config) => {\r\n    // config.headers[\"HEADER-NAME\"]\r\n    return config;\r\n  },\r\n  (error) => {\r\n    // Do something with request error\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// response interceptor\r\nHTTP.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.log(\"error\", error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default {\r\n  get,\r\n  put,\r\n  post,\r\n};\r\n","import HTTP from \"../HTTP\";\r\n\r\nexport const accuweatherAPI = {\r\n  fiveDays: (loactionId, isMetric) =>\r\n    HTTP.get(\r\n      `http://dataservice.accuweather.com/forecasts/v1/daily/5day/${loactionId}`,\r\n      { language: \"en-us\", details: true, metric: true },\r\n      { cancelToken: \"fiveDay\" }\r\n    ),\r\n\r\n  autocompleteCities: (searchQuery) => {\r\n    if (!searchQuery) return [];\r\n    return HTTP.get(\r\n      \"locations/v1/cities/autocomplete\",\r\n      {\r\n        language: \"en-us\",\r\n        q: searchQuery,\r\n      },\r\n      { cancelToken: \"autocomplete\" }\r\n    );\r\n  },\r\n\r\n  currentWeather: (loactionId) => {\r\n    return HTTP.get(\r\n      `http://dataservice.accuweather.com/currentconditions/v1/${loactionId}`,\r\n      { language: \"en-us\", details: true },\r\n      { cancelToken: \"currentconditions\" }\r\n    );\r\n  },\r\n};\r\n","import { accuweatherAPI } from \"../../services/API/accuweather\";\r\nimport autocompleteDataJson from \"../../data/cities_autocomplete.json\"\r\nimport {util} from \"../../services/util\"\r\nexport default {\r\n  SET_AUTOCOMPLETE_DATA_BY_QUERY: (query) => {\r\n    return async (dispatch, getState) => {\r\n    // Fetch here\r\n    debugger;\r\n    const store = getState()\r\n    const autocompleteData = autocompleteDataJson||  store.autocomplete.data[query] || await accuweatherAPI.autocompleteCities(query);\r\n    // await util.sleep(1000)\r\n      dispatch({ type: \"SET_AUTOCOMPLETE_DATA_BY_QUERY\", payload: { [query]: autocompleteData }, });\r\n      return autocompleteData\r\n    };\r\n  },\r\n//   SET_WHEATHER_DATA_BY_KEY: () => {\r\n//     return async () => {\r\n//       return { SET_WHEATHER_DATA_BY_KEY: \"SET_WHEATHER_DATA_BY_KEY\" };\r\n//       // const geolocationPermission = await navigator.permissions.query({ name: \"geolocation\" })\r\n//     };\r\n//   },\r\n};\r\n","// *https://www.registers.service.gov.uk/registers/country/use-the-api*\r\n// import fetch from \"cross-fetch\";\r\n\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { util } from \"../../services/util\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport HTTP from \"../../services/HTTP\";\r\nimport CITEIS_AUTOCOMPLETE_DATA from \"../../data/cities_autocomplete.json\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport \"./WeatherAutocomplete.scss\";\r\nimport autocompleteActions from \"./actions\";\r\nconst useQuery = () => new URLSearchParams(useLocation().search);\r\n/* prettier-ignore */\r\n\r\nfunction HeroloAutocomplete(props) {\r\n\r\n\r\n\tconst useStyles = makeStyles((theme) => ({\r\n\t\troot: {\r\n\t\t\t// padding: 0,\r\n\t\t\tbackgroundColor: theme.palette.outterCard[props.APP_CONFIG_STORE.themeType],\r\n\t\t\tpadding: \"2px 4px\",\r\n\t\t\tdisplay: \"flex\",\r\n\t\t\talignItems: \"center\",\r\n\t\t},\r\n\t\r\n\t\ticon: {\r\n\t\t\t// color: theme.palette.text.secondary,\r\n\t\t\tmarginRight: theme.spacing(2),\r\n\t\t},\r\n\t}));\r\n\r\n\tconst query = useQuery();\r\n\tconst URL_SEARCH_QUERY = query.get(\"search\");\r\n\r\n\r\n\tconst [fetchQuery, setFetchQuery] = React.useState(null);\r\n\tconst [input, setInput] = React.useState(null);\r\n\tconst [loading, setLoading] = React.useState(false);\r\n\tconst [open, setOpen] = React.useState(false);\r\n\tconst [items, setItems] = React.useState([]);\r\n\tconst [value, setValue] = React.useState(null);\r\n\tconst locationId = props.match.params.locationId\r\n\r\n\tconst handleInputChange = (event, inputVal) => {\r\n\t\tdebugger;\r\n\t\tif(event && event.type === 'blur') return;\r\n\t\telse if(event && event.type === 'change') {\r\n\t\t\tprops.history.push(`/weather/${locationId}/?search=${inputVal}` );\r\n\t\t\tsetFetchQuery(inputVal)\r\n\t\t}\r\n\t\tsetInput(inputVal || '')\r\n\t};\r\n\r\n\tconst setNewVal = (newVal) => {\r\n\t\tdebugger;\r\n\t\tif (newVal === undefined) return;\r\n\t\telse {\r\n\t\t\tprops.history.push(`/weather/${newVal.Key}/?search=${newVal.LocalizedName}` );\r\n\t\t\tprops.UPDATE_CURRENT_WEATHER_INFO({\r\n\t\t\t\tname: `${newVal.LocalizedName}${ newVal.Country ? \", \" + newVal.Country.LocalizedName : \"\" }`,\r\n\t\t\t\tkey: newVal.Key\r\n\t\t\t});\r\n\t\t}\r\n\t\tsetValue(newVal);\r\n\t};\r\n\r\n\tconst onComponentMount = async () => {\r\n\t\tdebugger;\r\n\t\tsetInput(URL_SEARCH_QUERY || '')\r\n\t\tsetFetchQuery(URL_SEARCH_QUERY || '')\r\n\t\tconst fetchItems = await props.SET_AUTOCOMPLETE_DATA_BY_QUERY(URL_SEARCH_QUERY);\r\n\t\tsetItems(fetchItems);\r\n\t\tif (locationId) {\r\n\t\t\t// If there is locationId in the route we wants to select it from the items we fetched to the autocomplete\r\n\t\t\tconst itemInOptions = fetchItems.find( (option) => option.Key === locationId );\r\n\t\t\tsetNewVal(itemInOptions);\r\n\t\t}\r\n\t};\r\n\r\n\t// On Mounted\r\n\tReact.useEffect(() => {\r\n\t\tonComponentMount();\r\n\t}, []);\r\n\r\n\tutil.useDebounce(fetchQuery, 1000, async () => {\r\n\t\tif (fetchQuery) {\r\n\t\t\tsetLoading(true)\r\n\t\t\tconst fetchItems = await props.SET_AUTOCOMPLETE_DATA_BY_QUERY(fetchQuery);\r\n\t\t\tsetItems(fetchItems)\r\n\t\t\tsetLoading(false)\r\n\t\t} \t\r\n\t});\r\n\tconst classes = useStyles();\r\n// debugger;\r\n\r\n\treturn (\r\n\t\t\r\n\t\t<Autocomplete\r\n\t\tclassName=\"WeatherAutocomplete--main-container\"\r\n\t\t\tonInputChange={handleInputChange}\r\n\t\t\tonChange={(event, newVal) => setNewVal(newVal)} \r\n\t\t\tgetOptionLabel={(option) => `${option.LocalizedName}, ${ option.Country ? option.Country.LocalizedName : \"\" }` }\r\n\t\t\tvalue={value}\r\n\t\t\tinputValue={input}\r\n\t\t\toptions={props.AUTOCOMPLETE_STORE.data[fetchQuery] || []}\r\n\t\t\tloading={loading}\r\n\t\t\tmargin=\"dense\"\r\n\t\t\tgetOptionSelected={(option, value) => value && option && option.Key === value.Key }\r\n\t\t\topen={open}\r\n\t\t\tonOpen={() => { setOpen(true); }}\r\n\t\t\tonClose={() => { setOpen(false); }}\r\n\t\t\trenderOption={(option) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Grid container alignItems=\"center\" className=\"asdsadlfgjoedfikghjokdfsghj\" >\r\n\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t<LocationOnIcon className={classes.icon} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs >\r\n\t\t\t\t\t\t\t<Typography variant=\"body2\" >{`${option.LocalizedName}, ${option.Country.LocalizedName}`}</Typography>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t);\r\n\t\t\t}}\r\n\t\t\trenderInput={(params) => (\r\n\t\t\t\t<Paper component=\"form\" className={classes.root}>\t\r\n\t\t\t\t<TextField\r\n\t\t\t\tclassName=\"WeatherAutocomplete--input\"\r\n\t\t\t\t\t{...params}\r\n\t\t\t\t\tautoFocus\r\n\t\t\t\t\tplaceholder=\"Select Location\"\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t...params.InputProps,\r\n\t\t\t\t\t\tstartAdornment: (<SearchIcon className=\"mr-1\"/>),\r\n\t\t\t\t\t\tendAdornment: (\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t{loading ? (\r\n\t\t\t\t\t\t\t\t\t<CircularProgress color=\"inherit\" size={20} />\r\n\t\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t{params.InputProps.endAdornment}\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t}}\r\n\t\t\t \t/>\r\n\t\t\t  </Paper>\r\n\t\t\t)}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    APP_CONFIG_STORE: state.appConfig,\r\n    AUTOCOMPLETE_STORE: state.autocomplete,\r\n    // fiveDay: state.fiveDay,\r\n    // currentWeather: state.currentWeatherReducer,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    UPDATE_CURRENT_WEATHER_INFO: (payload) =>\r\n      dispatch({ type: \"UPDATE_CURRENT_WEATHER_INFO\", payload }),\r\n    SET_AUTOCOMPLETE_DATA_BY_QUERY: (query) =>\r\n      dispatch(autocompleteActions.SET_AUTOCOMPLETE_DATA_BY_QUERY(query)),\r\n    // dispatchFiveDaysData: (payload) => dispatch({ type: \"ADD_FIVE_DAY_FETCH_DATA\", payload }),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeroloAutocomplete);\r\n","import { Card } from \"@material-ui/core\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst InnerCard = (props) => {\r\n  const useStyles = makeStyles((theme) => ({\r\n    innerCard: {\r\n      backgroundColor: `${theme.palette.innerCard[props.appConfig.themeType]} !important`,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  return <Card className={`${classes.innerCard} ${props.className} fgadfgdsfgdsfgkjdsfoikgjdofjg`}>{props.children}</Card>;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  appConfig: state.appConfig,\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InnerCard);\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles({\r\n  tempUnitBtn: {\r\n    paddingTop: \"12px\",\r\n    minWidth: \"unset\",\r\n    outline: \"none !important\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#461eb7 !important\",\r\n    },\r\n  },\r\n  media: {\r\n    backgroundSize: \"auto\",\r\n    width: \"45px\",\r\n    height: \"45px\",\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    minHeight: \"191px\",\r\n  },\r\n});\r\n","import { accuweatherAPI } from \"../../services/API/accuweather\";\r\nimport current_weather from \"../../data/current_weather.json\"\r\nimport {util} from \"../../services/util\"\r\nexport default {\r\n  SET_WHEATHER_DATA_BY_GEOLOCATION: () => {\r\n    return async (dispatch, getState) => {\r\n    // Fetch here\r\n      dispatch({\r\n        type: \"SET_WHEATHER_DATA_BY_GEOLOCATION\",\r\n        payload: { SET_WHEATHER_DATA_BY_GEOLOCATION: \"SET_WHEATHER_DATA_BY_GEOLOCATION\" },\r\n      });\r\n    };\r\n  },\r\n  SET_WHEATHER_DATA_BY_KEY: (key) => {\r\n    return async (dispatch, getState) => {\r\n    // Fetch here\r\n    const store = getState()\r\n    const weatherData = current_weather || store.currentWeather.data[key] || await accuweatherAPI.currentWeather(key);\r\n    await\tutil.sleep(1000)\r\n      dispatch({ type: \"SET_WHEATHER_DATA_BY_KEY\", payload: { [key]: weatherData }, });\r\n      return weatherData\r\n    };\r\n  },\r\n//   SET_WHEATHER_DATA_BY_KEY: () => {\r\n//     return async () => {\r\n//       return { SET_WHEATHER_DATA_BY_KEY: \"SET_WHEATHER_DATA_BY_KEY\" };\r\n//       // const geolocationPermission = await navigator.permissions.query({ name: \"geolocation\" })\r\n//     };\r\n//   },\r\n};\r\n","/* prettier-ignore */\r\nimport React from \"react\";\r\nimport current_weather from \"../../data/current_weather.json\";\r\nimport { accuweatherAPI } from \"../../services/API/accuweather\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  CardMedia,\r\n  Divider,\r\n  Grid,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport InnerCard from \"../InnerCard.js\";\r\nimport { util } from \"../../services/util\";\r\nimport appConfigActions from \"../../App/actions\";\r\nimport { useStyles } from \"./style\";\r\nimport weatherActions from \"../../Views/Weather/actions\";\r\n/* prettier-ignore */\r\nfunction CurrentWeather(props) {\r\n  const locationId = props.match.params.locationId;\r\n  const [loading, setLoading] = React.useState(false);\r\n  const classes = useStyles();\r\n\r\n  const dataInit = async () => {\r\n\t  if (!locationId) return;\r\n    setLoading(true)\r\n    await props.SET_WHEATHER_DATA_BY_KEY(locationId);\r\n    setLoading(false)\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    dataInit(locationId);\r\n  }, [locationId]);\r\n\r\n  const appTempUnit = props.APP_CONFIG.tempratureUnit;\r\n  const isReady = !loading && props.APP_CONFIG.isAppReady && props.CURRENT_WEATHER_STORE.info.name && props.CURRENT_WEATHER_STORE.data[locationId]\r\n  return (\r\n\t\r\n    <InnerCard className={classes.root}>\r\n      {!isReady && (\r\n        <Box margin=\"auto\">\r\n          <CircularProgress color=\"inherit\" size={75} />\r\n        </Box>\r\n      )}\r\n      {isReady &&\r\n        props.CURRENT_WEATHER_STORE.data[locationId].map((item, i) => (\r\n          <Grid container spacing={3} key={i} style={{ padding: \"15px\" }}>\r\n\t\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"subtitle2\" className=\"px-4\"> {props.CURRENT_WEATHER_STORE.info.name} </Typography>\r\n              <Typography variant=\"subtitle1\" className=\"px-4\">{moment(item.LocalObservationDateTime).format(\"dddd\")} {moment(item.LocalObservationDateTime).format(\"HH:MM\")}</Typography>\r\n              <Typography variant=\"subtitle1\" className=\"px-4\">{item.WeatherText}</Typography>\r\n              <Grid\r\n                container\r\n                spacing={2}\r\n                className=\"px-4\"\r\n                style={{ marginTop: \"auto\" }}\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid item xs={\"auto\"}>\r\n                  <CardMedia\r\n                    className={classes.media}\r\n                    image={`https://developer.accuweather.com/sites/default/files/${item.WeatherIcon.toString().padStart( 2, \"0\" )}-s.png`}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={\"auto\"}>\r\n                  <Box display=\"flex\">\r\n                    <Typography variant=\"h2\" className=\"pt-1\">{Math.floor(item.Temperature[appTempUnit].Value)}</Typography>\r\n                    <Box display=\"flex\" height=\"max-content\">\r\n                      <Button\r\n                        disableRipple\r\n                        style={{color: appTempUnit === \"Imperial\" ? \"grey\" : \"white\"}}\r\n                        onClick={() => props.updateAppConfig({ tempratureUnit: \"Metric\" }) }\r\n                        className={classes.tempUnitBtn}\r\n                      >\r\n                        °C\r\n                      </Button>\r\n                      <Divider orientation=\"vertical\" flexItem />\r\n                      <Button\r\n                        disableRipple\r\n                        onClick={() => props.updateAppConfig({ tempratureUnit: \"Imperial\", }) }\r\n                        style={{color: appTempUnit === \"Imperial\" ? \"white\" : \"grey\"}}\r\n                        className={classes.tempUnitBtn}\r\n                      >\r\n                    \t°F\r\n                      </Button>\r\n                    </Box>\r\n                  </Box>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        ))}\r\n    </InnerCard>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    CURRENT_WEATHER_STORE: state.currentWeather,\r\n    APP_CONFIG: state.appConfig,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateAppConfig: (payload) =>\r\n      dispatch(appConfigActions.UPDATE_APP_CONFIG(payload)),\r\n    SET_WHEATHER_DATA_BY_KEY: (key) =>\r\n      dispatch(weatherActions.SET_WHEATHER_DATA_BY_KEY(key)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrentWeather);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport PropTypes from \"prop-types\";\r\nimport moment from \"moment\";\r\n\r\nconst convert = require('convert-units')\r\n\r\nconst useStyles = makeStyles({\r\n  media: {\r\n    backgroundSize: 'auto',\r\n    // margin: \"auto\",\r\n    width: \"47px\",\r\n    height: \"45px\",\r\n  },\r\n  weatherInfo: {\r\n    margin: \"10px\",\r\n  },\r\n  root: {\r\n    borderRadius: 0,\r\n    maxWidth: 185,\r\n    minWidth: 185,\r\n  },\r\n  unitText: {\r\n    margin: \"3px 5px\",\r\n  },\r\n});\r\n\r\nfunction ForcastCard(props) {\r\n  const { item } = props;\r\n  const tempCumpute = (temp) => Math.floor( props.appConfig.tempratureUnit === \"Imperial\" ? convert(temp).from('C').to('F') : temp)\r\n  const tempratureUnit = `°${props.appConfig.tempratureUnit === \"Imperial\" ? 'F' : 'C'}`\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    item && (\r\n      <Grid container className={classes.root}>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h6\" color=\"textSecondary\" gutterBottom align=\"center\" > {moment(item.Date).format(\"dddd\")} </Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <CardMedia className={classes.media} image={`https://developer.accuweather.com/sites/default/files/${item.Day.Icon.toString().padStart( 2, \"0\" )}-s.png`} />\r\n        </Grid>\r\n        <Grid container item xs={12} className={classes.weatherInfo}>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h6\" component=\"h2\"> {item.Day.IconPhrase} </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n            <Box display=\"flex\" justifyContent=\"space-between\">\r\n              <Box display=\"flex\">\r\n                <Typography variant=\"h4\">{tempCumpute(item.Temperature.Maximum.Value)}</Typography>\r\n                <Typography variant=\"h5\" className={classes.unitText} >{tempratureUnit}</Typography>\r\n              </Box>\r\n              <Box display=\"flex\">\r\n                <Typography variant=\"h4\" color=\"textSecondary\"> {tempCumpute(item.Temperature.Minimum.Value)}</Typography>\r\n                <Typography variant=\"h5\" color=\"textSecondary\" className={classes.unitText} >{tempratureUnit}</Typography>\r\n              </Box>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n  );\r\n}\r\n\r\nForcastCard.propTypes = {\r\n  item: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    appConfig: state.appConfig,\r\n  };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps)(ForcastCard);\r\n","export const actions = {\r\n  ADD_FIVE_DAY_FETCH_DATA: (payload) => {\r\n    return { type: \"ADD_FIVE_DAY_FETCH_DATA\", payload: payload };\r\n  },\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    height: 140,\r\n    width: 100,\r\n  },\r\n  control: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Card, Grid } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: \"17px\",\r\n    height: \"max-content\",\r\n  },\r\n}));\r\n\r\nexport const GridContainer = (props) => {\r\n  const classes = useStyles();\r\n  const childrens = props.children;\r\n  return (\r\n    <Card className={`${classes.root}`}>\r\n      <Grid container spacing={3}>\r\n        {childrens.map((child, i) => (\r\n          <Grid item xs={12} key={i}>\r\n            {child}\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Card>\r\n  );\r\n};\r\n\r\nGridContainer.propTypes = {\r\n  childrens: PropTypes.array.isRequired,\r\n};\r\n","import ForcastCard from \"../ForcastCard/ForcastCard\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { connect } from \"react-redux\";\r\nimport { accuweatherAPI } from \"../../services/API/accuweather\";\r\nimport React from \"react\";\r\nimport { actions } from \"./actions\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { useStyles } from \"./style\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport FIVE_DAYS_DATA from \"../../data/5_days_of_daily_forecasts.json\";\r\nimport InnerCard from \"../InnerCard\";\r\nimport { CardMedia, Typography } from \"@material-ui/core\";\r\nimport { GridContainer } from \"../GridContainer\";\r\n\r\nfunction sleep(delay = 0) {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n}\r\n\r\nfunction DailyForecasts(props) {\r\n  const classes = useStyles();\r\n  const locationId = props.match.params.locationId;\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [fiveDaysForecastsItems, setFiveDaysForecastsItems] = React.useState(\r\n    null\r\n  );\r\n\r\n  const dataInit = async () => {\r\n    setLoading(true);\r\n    await sleep(1000);\r\n    // Fetching 5 Days of Daily Forecasts according to the locationId from the route, first trying to get data from redux store, if not exsit fetching from the server\r\n    const fiveDaysFetch =\r\n      FIVE_DAYS_DATA ||\r\n      props.fiveDay[locationId] ||\r\n      (await accuweatherAPI.fiveDays(locationId));\r\n    if (fiveDaysFetch.DailyForecasts) {\r\n      setFiveDaysForecastsItems(fiveDaysFetch.DailyForecasts);\r\n      props.ADD_FIVE_DAY_FETCH_DATA({\r\n        ...props.fiveDay,\r\n        [locationId]: fiveDaysFetch,\r\n      });\r\n    }\r\n    setLoading(false);\r\n  };\r\n  React.useEffect(() => {\r\n    dataInit();\r\n  }, [locationId]);\r\n\r\n  return (\r\n    <GridContainer>\r\n      <InnerCard>\r\n        <Grid\r\n          container\r\n          style={{ padding: \"15px\" }}\r\n        >\r\n          <Grid item>\r\n            <Typography variant=\"h5\">Weekly Report</Typography>\r\n            {/* <Typography variant=\"h5\"> some info</Typography> */}\r\n          </Grid>\r\n        </Grid>\r\n      </InnerCard>\r\n      <InnerCard className={classes.root}>\r\n        {loading ? (\r\n          <Grid item xs={\"auto\"}>\r\n            <Box\r\n              display=\"flex\"\r\n              justifyContent=\"center\"\r\n              height={177}\r\n              alignItems=\"center\"\r\n            >\r\n              <CircularProgress color=\"inherit\" size={80} />\r\n            </Box>\r\n          </Grid>\r\n        ) : (\r\n          <Grid item xs={\"auto\"}>\r\n            <Grid container justify=\"center\" direction=\"row\">\r\n              {fiveDaysForecastsItems &&\r\n                fiveDaysForecastsItems.map((item, i) => (\r\n                  <Grid key={i} item md={\"auto\"} xs={\"auto\"} lg={\"auto\"}>\r\n                    <Box display=\"flex\" justifyContent=\"center\">\r\n                      <ForcastCard item={item} />\r\n                    </Box>\r\n                  </Grid>\r\n                ))}\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n      </InnerCard>\r\n    </GridContainer>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    appConfig: state.appConfig,\r\n    fiveDay: state.fiveDay,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    ADD_FIVE_DAY_FETCH_DATA: (payload) =>\r\n      dispatch(actions.ADD_FIVE_DAY_FETCH_DATA(payload)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DailyForecasts);\r\n","import { Box, Grid, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport HeroloAutocomplete from \"../../../components/HeroloAutocomplete/HeroloAutocomplete\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n}));\r\nexport default function WelcomeSearch() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container className={classes.root} >\r\n      <Typography color=\"textPrimary\" variant=\"h4\" gutterBottom > Hello there Giborlo. </Typography>\r\n      <Typography color=\"textPrimary\" variant=\"h4\" gutterBottom > Welcome to my weather application.</Typography>\r\n      <Box mt={2}>\r\n        <Typography color=\"textPrimary\" m={2} variant=\"subtitle2\" gutterBottom >\r\n          Yet too often some very human cultural artifacts really lead the\r\n          business down the certain routes.\r\n        </Typography>\r\n      </Box>\r\n      <Box mt={'auto'} width=\"100%\">\r\n        <Route component={HeroloAutocomplete} />\r\n      </Box>\r\n        {/* <Box mt={2}>\r\n          <Typography color=\"textPrimary\" variant=\"subtitle2\" >\r\n            Best way to know your ciry weather.\r\n          </Typography>\r\n        </Box> */}\r\n    </Grid>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, useLocation } from \"react-router-dom\";\r\nimport HeroloAutocomplete from \"../../components/HeroloAutocomplete/HeroloAutocomplete\";\r\nimport CurrentWeather from \"../../components/CurrentWeather/CurrentWeather\";\r\nimport FiveDailyForecasts from \"../../components/FiveDailyForecasts/FiveDailyForecasts\";\r\nimport HTTP from \"../../services/HTTP\";\r\nimport CITEIS_AUTOCOMPLETE_DATA from \"../../data/cities_autocomplete.json\";\r\nimport FIVE_DAYS_DATA from \"../../data/5_days_of_daily_forecasts.json\";\r\nimport currentWeather from \"../../data/current_weather.json\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport WelcomeSearch from \"./components/WelcomeSearch\";\r\nimport { Box, Card, CardMedia, Container, Typography } from \"@material-ui/core\";\r\nimport InnerCard from \"../../components/InnerCard\";\r\nimport { GridContainer } from \"../../components/GridContainer\";\r\n\r\nfunction Weather(props) {\r\n  const useStyles = makeStyles((theme) => ({\r\n    weatherTitleIcon: {\r\n      width: \"96px\",\r\n      height: \"100%\",\r\n    },\r\n    root: {\r\n      width: \"100%\",\r\n      margin: \"0 auto\",\r\n      maxWidth: \"1060px\",\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container maxWidth=\"md\" className={classes.root}>\r\n      <Grid container className={classes.root} spacing={3}>\r\n        <Grid item xs={12} md={\"6\"}>\r\n          <Route component={WelcomeSearch} />\r\n        </Grid>\r\n        <Grid item xs={12} md={\"6\"}>\r\n          <GridContainer>\r\n            <InnerCard>\r\n              <Grid container style={{ padding: \"15px\" }} >\r\n                <Grid item>\r\n                  <CardMedia\r\n                    className={classes.weatherTitleIcon}\r\n                    image={`https://www.iconfinder.com/data/icons/weather-flat-14/64/weather02-512.png`}\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <Typography variant=\"h5\">Total Weather Report</Typography>\r\n                  <Typography variant=\"h5\"> some info</Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </InnerCard>\r\n            <Route\r\n              path={\"/weather/:locationId?/\"}\r\n              component={CurrentWeather}\r\n            />\r\n          </GridContainer>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Route\r\n            path={\"/weather/:locationId?/\"}\r\n            component={FiveDailyForecasts}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    appConfig: state.appConfig,\r\n    // fiveDay: state.fiveDay,\r\n    // currentWeather: state.currentWeatherReducer,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    // SET_WHEATHER_DATA_BY_KEYInfo: (payload) => dispatch({ type: \"UPDATE_CURRENT_WEATHER_INFO\", payload }),\r\n    // dispatchFiveDaysData: (payload) => dispatch({ type: \"ADD_FIVE_DAY_FETCH_DATA\", payload }),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Weather);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport InboxIcon from \"@material-ui/icons/Inbox\";\r\nimport DraftsIcon from \"@material-ui/icons/Drafts\";\r\nimport { Box, Card, Container, Grid } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { connect } from \"react-redux\";\r\nfunction ListItemLink(props) {\r\n  return <ListItem button component=\"a\" {...props} />;\r\n}\r\n\r\nfunction SimpleList(props) {\r\n  const useStyles = makeStyles((theme) => {\r\n    return {\r\n      favList: {\r\n        maxHeight: \"65vh\",\r\n        overflowY: \"auto\",\r\n      },\r\n      root: {\r\n        margin: \"0 auto\",\r\n        width: \"100%\",\r\n        maxWidth: \"957px\",\r\n        // backgroundColor: theme.palette.otterCard[props.appConfig.themeType],\r\n      },\r\n    };\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container className={classes.root} spacing={3}>\r\n      <Grid item xs={12}>\r\n        {/* <Box\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n          zIndex={4}\r\n          className={classes.root}\r\n        > */}\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <Card container>\r\n                <Typography variant=\"h5\" className=\"px-4 py-3\">\r\n                  h5. Heading\r\n                </Typography>\r\n              </Card>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Card container className={classes.favList}>\r\n                <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n                  <ListItem button>\r\n                    <ListItemIcon>\r\n                      <InboxIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Inbox\" />\r\n                  </ListItem>\r\n                  <ListItem button>\r\n                    <ListItemIcon>\r\n                      <DraftsIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Drafts\" />\r\n                  </ListItem>\r\n                </List>\r\n                <Divider />\r\n                <List component=\"nav\" aria-label=\"secondary mailbox folders\">\r\n                  <ListItem button>\r\n                    <ListItemText primary=\"Trash\" />\r\n                  </ListItem>\r\n                  <ListItemLink href=\"#simple-list\">\r\n                    <ListItemText primary=\"Spam\" />\r\n                  </ListItemLink>\r\n                  <ListItemLink href=\"#simple-list\">\r\n                    <ListItemText primary=\"Spam\" />\r\n                  </ListItemLink>\r\n                  <ListItemLink href=\"#simple-list\">\r\n                    <ListItemText primary=\"Spam\" />\r\n                  </ListItemLink>\r\n                  <ListItemLink href=\"#simple-list\">\r\n                    <ListItemText primary=\"Spam\" />\r\n                  </ListItemLink>\r\n                  <ListItemLink href=\"#simple-list\">\r\n                    <ListItemText primary=\"Spam\" />\r\n                  </ListItemLink>\r\n                  <ListItemLink href=\"#simple-list\">\r\n                    <ListItemText primary=\"Spam\" />\r\n                  </ListItemLink>\r\n                  <ListItemLink href=\"#simple-list\">\r\n                    <ListItemText primary=\"Spam\" />\r\n                  </ListItemLink>\r\n                  <ListItemLink href=\"#simple-list\">\r\n                    <ListItemText primary=\"Spam\" />\r\n                  </ListItemLink>\r\n                  <ListItemLink href=\"#simple-list\">\r\n                    <ListItemText primary=\"Spam\" />\r\n                  </ListItemLink>\r\n                  <ListItemLink href=\"#simple-list\">\r\n                    <ListItemText primary=\"Spam\" />\r\n                  </ListItemLink>\r\n                  <ListItemLink href=\"#simple-list\">\r\n                    <ListItemText primary=\"Spam\" />\r\n                  </ListItemLink>\r\n                  <ListItemLink href=\"#simple-list\">\r\n                    <ListItemText primary=\"Spam\" />\r\n                  </ListItemLink>\r\n                  <ListItemLink href=\"#simple-list\">\r\n                    <ListItemText primary=\"Spam\" />\r\n                  </ListItemLink>\r\n                  <ListItemLink href=\"#simple-list\">\r\n                    <ListItemText primary=\"Spam\" />\r\n                  </ListItemLink>\r\n                  <ListItemLink href=\"#simple-list\">\r\n                    <ListItemText primary=\"Spam\" />\r\n                  </ListItemLink>\r\n                  <ListItemLink href=\"#simple-list\">\r\n                    <ListItemText primary=\"Spam\" />\r\n                  </ListItemLink>\r\n                  <ListItemLink href=\"#simple-list\">\r\n                    <ListItemText primary=\"Spam\" />\r\n                  </ListItemLink>\r\n                  <ListItemLink href=\"#simple-list\">\r\n                    <ListItemText primary=\"Spam\" />\r\n                  </ListItemLink>\r\n                  <ListItemLink href=\"#simple-list\">\r\n                    <ListItemText primary=\"Spam\" />\r\n                  </ListItemLink>\r\n                  <ListItemLink href=\"#simple-list\">\r\n                    <ListItemText primary=\"Spam\" />\r\n                  </ListItemLink>\r\n                  <ListItemLink href=\"#simple-list\">\r\n                    <ListItemText primary=\"Spam\" />\r\n                  </ListItemLink>\r\n                  <ListItemLink href=\"#simple-list\">\r\n                    <ListItemText primary=\"Spam\" />\r\n                  </ListItemLink>\r\n                  <ListItemLink href=\"#simple-list\">\r\n                    <ListItemText primary=\"Spam\" />\r\n                  </ListItemLink>\r\n                  <ListItemLink href=\"#simple-list\">\r\n                    <ListItemText primary=\"Spam\" />\r\n                  </ListItemLink>\r\n                  <ListItemLink href=\"#simple-list\">\r\n                    <ListItemText primary=\"Spam\" />\r\n                  </ListItemLink>\r\n                  <ListItemLink href=\"#simple-list\">\r\n                    <ListItemText primary=\"Spam\" />\r\n                  </ListItemLink>\r\n                  <ListItemLink href=\"#simple-list\">\r\n                    <ListItemText primary=\"Spam\" />\r\n                  </ListItemLink>\r\n                  <ListItemLink href=\"#simple-list\">\r\n                    <ListItemText primary=\"Spam\" />\r\n                  </ListItemLink>\r\n                  <ListItemLink href=\"#simple-list\">\r\n                    <ListItemText primary=\"Spam\" />\r\n                  </ListItemLink>\r\n                  <ListItemLink href=\"#simple-list\">\r\n                    <ListItemText primary=\"Spam\" />\r\n                  </ListItemLink>\r\n                  <ListItemLink href=\"#simple-list\">\r\n                    <ListItemText primary=\"Spam\" />\r\n                  </ListItemLink>\r\n                  <ListItemLink href=\"#simple-list\">\r\n                    <ListItemText primary=\"Spam\" />\r\n                  </ListItemLink>\r\n                  <ListItemLink href=\"#simple-list\">\r\n                    <ListItemText primary=\"Spam\" />\r\n                  </ListItemLink>\r\n                  <ListItemLink href=\"#simple-list\">\r\n                    <ListItemText primary=\"Spam\" />\r\n                  </ListItemLink>\r\n                  <ListItemLink href=\"#simple-list\">\r\n                    <ListItemText primary=\"Spam\" />\r\n                  </ListItemLink>\r\n                  <ListItemLink href=\"#simple-list\">\r\n                    <ListItemText primary=\"Spam\" />\r\n                  </ListItemLink>\r\n                  <ListItemLink href=\"#simple-list\">\r\n                    <ListItemText primary=\"Spam\" />\r\n                  </ListItemLink>\r\n                  <ListItemLink href=\"#simple-list\">\r\n                    <ListItemText primary=\"Spam\" />\r\n                  </ListItemLink>\r\n                  <ListItemLink href=\"#simple-list\">\r\n                    <ListItemText primary=\"Spam\" />\r\n                  </ListItemLink>\r\n                  <ListItemLink href=\"#simple-list\">\r\n                    <ListItemText primary=\"Spam\" />\r\n                  </ListItemLink>\r\n                  <ListItemLink href=\"#simple-list\">\r\n                    <ListItemText primary=\"Spam\" />\r\n                  </ListItemLink>\r\n                  <ListItemLink href=\"#simple-list\">\r\n                    <ListItemText primary=\"Spam\" />\r\n                  </ListItemLink>\r\n                  <ListItemLink href=\"#simple-list\">\r\n                    <ListItemText primary=\"Spam\" />\r\n                  </ListItemLink>\r\n                  <ListItemLink href=\"#simple-list\">\r\n                    <ListItemText primary=\"Spam\" />\r\n                  </ListItemLink>\r\n                </List>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n        {/* </Box> */}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    appConfig: state.appConfig,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(SimpleList);\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n    // width: '100%',\r\n    padding: \"0\",\r\n    // margin: '0'\r\n    \"& > div\": {\r\n      marginTop: \"15vh\",\r\n    },\r\n  },\r\n}));\r\n","import \"./App.css\";\r\nimport React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { theme } from \"../plugins/material-ui\";\r\nimport HeroloTabs from \"../components/HeroloTabs/HeroloTabs\";\r\nimport Weather from \"../Views/Weather/Weather\";\r\nimport { CardMedia, Container, Grid } from \"@material-ui/core\";\r\nimport Favorites from \"../Views/Favorites/Favorites\";\r\nimport appConfigActions from \"./actions\";\r\nimport { useStyles } from \"./style\";\r\nimport { Favorite } from \"@material-ui/icons\";\r\nimport geolocation from \"geolocation\";\r\nimport weatherActions from \"../Views/Weather/actions\"\r\nimport autocompleteActions from \"../components/HeroloAutocomplete/actions\";\r\n// const useQuery = () => new URLSearchParams(useLocation().search);\r\n\r\nfunction App(props) {\r\n  // const query = useQuery();\r\n  const classes = useStyles();\r\n  const appInit = async () => {\r\n    const geolocationPermission = await navigator.permissions.query({ name: \"geolocation\" })\r\n    props.updateAppConfig({ isAppReady: true });\r\n    geolocation.getCurrentPosition(function (err, position) {\r\n      if (err) throw err;\r\n      props.SET_WHEATHER_DATA_BY_GEOLOCATION(position)\r\n    });\r\n    // const searchQuery = query.get(\"search\");\r\n    // if(searchQuery) props.SET_AUTOCOMPLETE_DATA_BY_QUERY(searchQuery)\r\n    \r\n  };\r\n  React.useEffect(() => {\r\n    appInit();\r\n  }, []);\r\n\r\n  const [selectedLocation, setselectedLocation] = React.useState(null);\r\n  return (\r\n    <MuiThemeProvider theme={theme(props)}>\r\n      <CardMedia\r\n        className=\"app--bg-image\"\r\n        image=\"https://www.wallpaperflare.com/static/656/666/467/landscape-mountains-clouds-forest-wallpaper.jpg\"\r\n      />\r\n      <Router>\r\n        <Container className={classes.root} maxWidth={false}>\r\n          <Route\r\n            path={\"/:tab/:locationId?\"}\r\n            render={(url) => <HeroloTabs url={url} />}\r\n          />\r\n\r\n          <Switch>\r\n            <Route path={\"/weather/:locationId?\"} component={Weather} />\r\n            <Route path={\"/favorites\"} component={Favorites} />\r\n            <Redirect exact to={\"/weather\"} />\r\n          </Switch>\r\n        </Container>\r\n      </Router>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    appConfig: state.appConfig,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    SET_WHEATHER_DATA_BY_GEOLOCATION: () => dispatch(weatherActions.SET_WHEATHER_DATA_BY_GEOLOCATION()),\r\n    SET_WHEATHER_DATA_BY_KEY: (key) => dispatch(weatherActions.SET_WHEATHER_DATA_BY_KEY(key)),\r\n    SET_AUTOCOMPLETE_DATA_BY_QUERY: (query) => dispatch(autocompleteActions.SET_AUTOCOMPLETE_DATA_BY_QUERY(query)),\r\n    updateAppConfig: (payload) => dispatch(appConfigActions.UPDATE_APP_CONFIG(payload)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nimport \"./index.css\";\nimport App from \"./App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}