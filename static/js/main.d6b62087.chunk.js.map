{"version":3,"sources":["redux/store.js","redux/reducers/locationReducer.js","redux/reducers/fiveDayReducer.js","redux/reducers/favoritesReducer.js","redux/reducers/errorReducer.js","redux/reducers/currentWeatherReducer.js","redux/reducers/autocompleteReducer.js","redux/reducers/appConfigReducer.js","plugins/material-ui.js","App/actions.js","components/HeroloTabs/HeroloTabs.js","services/util.js","services/HTTP.js","components/HeroloAutocomplete/HeroloAutocomplete.js","services/API/accuweather.js","components/InnerCard.js","components/CurrentWeather/style.js","components/CurrentWeather/CurrentWeather.js","components/ForcastCard/ForcastCard.js","components/FiveDailyForecasts/actions.js","components/FiveDailyForecasts/style.js","components/FiveDailyForecasts/FiveDailyForecasts.js","Views/Weather/components/WelcomeSearch.js","Views/Weather/Weather.js","Views/Favorite/Favorite.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","location","state","lat","lon","asked","action","type","data","fiveDay","payload","favorites","Map","a","set","name","d","delete","error","status","currentWeather","info","key","autocomplete","appConfig","themeType","tempratureUnit","isAppReady","store","createStore","applyMiddleware","thunk","theme","props","createMuiTheme","palette","test1","main","test2","background","paper","innerCard","light","dark","outterCard","breakpoints","values","xs","sm","md","lg","xl","test","useStyles","makeStyles","root","display","flexDirection","alignItems","padding","flexGrow","backgroundColor","primary","connect","dispatch","updateAppConfig","appConfigActions","React","useState","isDark","setIsDark","tabProps","index","tabName","locationId","url","match","params","query","search","id","label","value","to","component","Link","classes","setValue","useEffect","tab","AppBar","position","className","Tabs","onChange","event","newValue","aria-label","Tab","Switch","checked","target","color","inputProps","util","delay","callback","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","Promise","resolve","HTTP","axios","create","baseURL","withCredentials","headers","Accept","apikey","interceptors","request","use","config","reject","response","console","log","route","get","then","res","catch","err","dispatchCurrentWeatherInfo","icon","marginRight","spacing","URLSearchParams","useLocation","open","setOpen","loading","setLoading","items","setItems","input","setInput","fetchCities","searchQuery","cities","CITEIS_AUTOCOMPLETE_DATA","language","q","setNewVal","newVal","history","push","Key","LocalizedName","Country","onMountedData","itemInOptions","find","option","Autocomplete","onInputChange","getOptionLabel","options","margin","getOptionSelected","onOpen","onClose","renderOption","Grid","container","item","Typography","variant","renderInput","Paper","TextField","autoFocus","placeholder","InputProps","startAdornment","endAdornment","Fragment","CircularProgress","size","accuweatherAPI","loactionId","isMetric","details","metric","Card","children","tempUnitBtn","paddingTop","minWidth","outline","media","backgroundSize","width","height","minHeight","CURRENT_WEATHER_STORE","APP_CONFIG","dispatchCurrentWeather","setCurrentWeather","dataInit","current_weather","appTempUnit","isReady","Box","map","i","style","moment","LocalObservationDateTime","format","WeatherText","marginTop","CardMedia","image","WeatherIcon","toString","padStart","Math","floor","Temperature","Value","Button","onClick","Divider","orientation","flexItem","convert","require","weatherInfo","borderRadius","maxWidth","unitText","tempCumpute","temp","from","gutterBottom","align","Date","Day","Icon","IconPhrase","justifyContent","Maximum","Minimum","actions","control","sleep","ADD_FIVE_DAY_FETCH_DATA","fiveDaysForecastsItems","setFiveDaysForecastsItems","FIVE_DAYS_DATA","fiveDaysFetch","DailyForecasts","justify","direction","WelcomeSearch","mt","m","HeroloAutocomplete","favList","maxHeight","overflowY","weatherTitleIcon","currentWeatherGrid","Container","path","CurrentWeather","FiveDailyForecasts","ListItemLink","ListItem","button","zIndex","List","ListItemIcon","ListItemText","href","render","Weather","Favorite","exact","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d6b62087.chunk.js","sourcesContent":["import thunk from 'redux-thunk'\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport { locationReducer } from './reducers/locationReducer'\r\nimport { fiveDayReducer } from './reducers/fiveDayReducer'\r\nimport { favoritesReducer } from './reducers/favoritesReducer'\r\nimport { errorReducer } from './reducers/errorReducer'\r\nimport { currentWeatherReducer } from './reducers/currentWeatherReducer'\r\nimport { autocompleteReducer } from './reducers/autocompleteReducer'\r\nimport { appConfigReducer } from './reducers/appConfigReducer'\r\n\r\nconst reducer = combineReducers({\r\n  location: locationReducer,\r\n  fiveDay: fiveDayReducer,\r\n  favorites: favoritesReducer,\r\n  error: errorReducer,\r\n  currentWeather: currentWeatherReducer,\r\n  autocomplete: autocompleteReducer,\r\n  appConfig: appConfigReducer,\r\n  \r\n})\r\n\r\nexport const store = createStore(reducer, applyMiddleware(thunk))","export const locationReducer = (\n  state = { lat: 32.045, lon: 34.77, asked: false },\n  action\n) => {\n  switch (action.type) {\n    case \"SET_LOCATION\":\n      return action.data;\n    default:\n      return state;\n  }\n};\n","export const fiveDayReducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"ADD_FIVE_DAY_FETCH_DATA\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","// a hashmap can be used to fetch a city object from the favorite list in O(1)\n// instead of O(n) fetching from an array\nexport const favoritesReducer = (state = new Map(), action) => {\n  switch (action.type) {\n    case \"ADD_FAVORITE\":\n      const a = new Map(state);\n      a.set(action.data.name, action.data);\n      return a;\n    case \"REMOVE_FAVORITE\":\n      const d = new Map(state);\n      d.delete(action.data.name);\n      return d;\n    default:\n      return state;\n  }\n};\n","export const errorReducer = (state = { status: false }, action) => {\n  switch (action.type) {\n    case \"SET_ERROR\":\n      return action.data;\n    default:\n      return state;\n  }\n};\n","export const currentWeatherReducer = (\r\n  state = {\r\n    data: {},\r\n    info: {\r\n        name: null,\r\n        key: null,\r\n    }\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"ADD_CURRENT_WEATHER_RESULTS\":\r\n      return { ...state, data: { ...state.data, ...action.payload } };\r\n    case \"UPDATE_CURRENT_WEATHER_INFO\":\r\n      return { ...state, info: { ...state.info, ...action.payload } };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const autocompleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_SERACH_RESULTS\":\r\n      return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const appConfigReducer = (\r\n  state = {\r\n    themeType: 'dark',\r\n    tempratureUnit: \"Metric\",\r\n    isAppReady: false,\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"UPDATE_APP_CONFIG\":\r\n      return { ...state, ...action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nexport const theme = (props) =>\r\n  createMuiTheme({\r\n    palette: {\r\n      test1: {\r\n        main: \"red\",\r\n      },\r\n      test2: {\r\n        main: \"blue\",\r\n      },\r\n      type: props.appConfig.themeType,\r\n      background: {\r\n        paper: props.appConfig.themeType == \"dark\" ? \"#3810ae\" : \"#FFFF\",\r\n      },\r\n      innerCard: {\r\n        light: \"#FFFF\",\r\n        dark: \"#461eb7\",\r\n      },\r\n      outterCard: {\r\n        light: \"#FFFF\",\r\n        dark: \"#3810ae\",\r\n      },\r\n    },\r\n    breakpoints: {\r\n      // Define custom breakpoint values.\r\n      // These will apply to Material-UI components that use responsive\r\n      // breakpoints, such as `Grid` and `Hidden`. You can also use the\r\n      // theme breakpoint functions `up`, `down`, and `between` to create\r\n      // media queries for these breakpoints\r\n      values: { xs: 0, sm: 450, md: 600, lg: 900, xl: 1200, test: 1120 },\r\n    },\r\n  });\r\n","export default {\r\n  UPDATE_APP_CONFIG: (payload) => {\r\n    return { type: \"UPDATE_APP_CONFIG\", payload: payload };\r\n  },\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport { connect } from \"react-redux\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Switch } from \"@material-ui/core\";\r\nimport appConfigActions from \"../../App/actions\"\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    padding: 0,\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.primary,\r\n  },\r\n}));\r\n\r\nfunction HeroloTabs(props) {\r\n  const [isDark, setIsDark] = React.useState( props.appConfig.themeType === \"dark\" );\r\n\r\n  const handleSwitchChange = (event) => {\r\n    props.updateAppConfig({ themeType: event.target.checked ? 'dark' : 'light'});\r\n    setIsDark( event.target.checked );\r\n  };\r\n\r\n  const handleTabChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const tabProps = (index, tabName) => {\r\n    const locationId = props.url.match.params.locationId;\r\n    const query = props.url.location.search;\r\n    return {\r\n      id: `simple-tab-${index}`,\r\n      \"aria-controls\": `simple-tabpanel-${index}`,\r\n      label: tabName,\r\n      value: tabName,\r\n      to: `/${tabName}${locationId ? \"/\" + locationId : \"\"}/${query}`,\r\n      component: Link,\r\n    };\r\n  };\r\n\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(null);\r\n\r\n  React.useEffect(() => {\r\n    setValue(props.url.match.params.tab);\r\n  }, [props.url.match.params.tab]);\r\n\r\n  return (\r\n    // <div className={classes.root}>\r\n    <AppBar position=\"static\" className={classes.root}>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleTabChange}\r\n        aria-label=\"simple tabs example\"\r\n      >\r\n        <Tab {...tabProps(0, \"weather\")} />\r\n        <Tab {...tabProps(1, \"favorite\")} />\r\n      </Tabs>\r\n      <Switch\r\n        className=\"ml-auto\"\r\n        checked={isDark}\r\n        onChange={handleSwitchChange}\r\n        color=\"primary\"\r\n        inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n      />\r\n    </AppBar>\r\n    // </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    appConfig: state.appConfig,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateAppConfig: (payload) => dispatch(appConfigActions.UPDATE_APP_CONFIG(payload)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeroloTabs);\r\n","import React from \"react\";\r\n\r\nexport const util = {\r\n  useDebounce: (value, delay, callback) => {\r\n    // State and setters for debounced value\r\n    const [debouncedValue, setDebouncedValue] = React.useState(value);\r\n\r\n    React.useEffect(\r\n      () => {\r\n        // Update debounced value after delay\r\n        const handler = setTimeout(() => {\r\n          setDebouncedValue(value);\r\n          if (callback) callback(value);\r\n        }, delay);\r\n\r\n        // Cancel the timeout if value changes (also on delay change or unmount)\r\n        // This is how we prevent debounced value from updating if value is changed ...\r\n        // .. within the delay period. Timeout gets cleared and restarted.\r\n\r\n        return () => {\r\n          clearTimeout(handler);\r\n        };\r\n      },\r\n      [value, delay] // Only re-call effect if value or delay changes\r\n    );\r\n\r\n    return debouncedValue;\r\n  },\r\n  sleep: (delay = 0) => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(resolve, delay);\r\n    });\r\n  },\r\n};\r\n","import axios from 'axios';\r\n\r\nconst HTTP = axios.create({\r\n  baseURL: 'http://dataservice.accuweather.com/',\r\n  withCredentials: false,\r\n  headers: {\r\n    Accept: 'application/json',\r\n    'Content-Type': 'application/json',\r\n  },\r\n  params:{\r\n    apikey: 'JpXZNXKBXpKo5VVG0RZzybpKahdMX8vv'\r\n  }\r\n});\r\n\r\nconst get = (route, params, config) => {\r\n  return new Promise((resolve, reject) => {\r\n    HTTP.get(route, { params })\r\n      .then(res => {\r\n        resolve(res.data);\r\n      })\r\n      .catch(err => {\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nconst post = async (route, params) => {\r\n  return new Promise((resolve, reject) => {\r\n    HTTP.post(route, params).then(res => {\r\n      resolve(res);\r\n    });\r\n  });\r\n};\r\n\r\nconst put = async (route, params) => {\r\n  return new Promise((resolve, reject) => {\r\n    HTTP.put(route, params).then(res => {\r\n      resolve(res);\r\n    });\r\n  });\r\n};\r\n\r\n// request interceptor\r\nHTTP.interceptors.request.use(\r\n  config => {\r\n    // config.headers[\"HEADER-NAME\"]\r\n    return config;\r\n  },\r\n  error => {\r\n    // Do something with request error\r\n    return Promise.reject(error);\r\n  },\r\n);\r\n\r\n// response interceptor\r\nHTTP.interceptors.response.use(\r\n  response => {\r\n    return response;\r\n  },\r\n  error => {\r\n    console.log('error', error);\r\n    return Promise.reject(error);\r\n  },\r\n);\r\n\r\nexport default {\r\n  get,\r\n  put,\r\n  post,\r\n};\r\n","// *https://www.registers.service.gov.uk/registers/country/use-the-api*\r\n// import fetch from \"cross-fetch\";\r\n\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { util } from \"../../services/util\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport HTTP from \"../../services/HTTP\";\r\nimport CITEIS_AUTOCOMPLETE_DATA from \"../../data/cities_autocomplete.json\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport \"./WeatherAutocomplete.scss\";\r\n\r\nconst useQuery = () => new URLSearchParams(useLocation().search);\r\n/* prettier-ignore */\r\n\r\nfunction HeroloAutocomplete(props) {\r\n\r\n\r\n\tconst useStyles = makeStyles((theme) => ({\r\n\t\troot: {\r\n\t\t\t// padding: 0,\r\n\t\t\tbackgroundColor: theme.palette.outterCard[props.appConfig.themeType],\r\n\t\t\tpadding: \"2px 4px\",\r\n\t\t\tdisplay: \"flex\",\r\n\t\t\talignItems: \"center\",\r\n\t\t},\r\n\t\r\n\t\ticon: {\r\n\t\t\t// color: theme.palette.text.secondary,\r\n\t\t\tmarginRight: theme.spacing(2),\r\n\t\t},\r\n\t}));\r\n\r\n\tconst query = useQuery();\r\n\tconst [open, setOpen] = React.useState(false);\r\n\tconst [loading, setLoading] = React.useState(false);\r\n\tconst [items, setItems] = React.useState([]);\r\n\tconst [value, setValue] = React.useState(null);\r\n\tconst [input, setInput] = React.useState(null);\r\n\tconst locationId = props.match.params.locationId\r\n\r\n\tconst fetchCities = async (searchQuery) => {\r\n\t\tconsole.log(\"fetchCities\");\r\n\t\tlet cities;\r\n\t\tsetLoading(true);\r\n\t\tif (!searchQuery) cities = [];\r\n\t\telse {\r\n\t\t\tawait util.sleep(1000);\r\n\t\t\tcities = CITEIS_AUTOCOMPLETE_DATA || (await HTTP.get(\"locations/v1/cities/autocomplete\", { language: \"en-us\", q: searchQuery, }));\r\n\t\t}\r\n\r\n\t\tsetLoading(false);\r\n\t\treturn cities;\r\n\t};\r\n\r\n\tconst setNewVal = (newVal) => {\r\n\t\tsetValue(newVal);\r\n\t\tif (!newVal) {\r\n\t\t\t// props.history.push(`/weather`);\r\n\t\t\t// props.dispatchCurrentWeatherInfo({ name: null, key: null });\r\n\t\t\treturn;\r\n\t\t} else {\r\n\t\t\tprops.history.push( `/weather/${newVal.Key}/?search=${newVal.LocalizedName}` );\r\n\t\t\tprops.dispatchCurrentWeatherInfo({\r\n\t\t\t\tname: `${newVal.LocalizedName}${ newVal.Country ? \", \" + newVal.Country.LocalizedName : \"\" }`,\r\n\t\t\t\tkey: newVal.Key,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst onMountedData = async () => {\r\n\t\tconst searchQuery = query.get(\"search\");\r\n\t\tconst cities = await fetchCities(searchQuery);\r\n\t\tsetItems(cities);\r\n\t\tif (locationId) {\r\n\t\t\t// If there is locationId in the route we wants to select it from the items we fetched to the autocomplete\r\n\t\t\tconst itemInOptions = cities.find( (option) => option.Key === locationId );\r\n\t\t\tsetNewVal(itemInOptions);\r\n\t\t}\r\n\t};\r\n\r\n\t// On Mounted\r\n\tReact.useEffect(() => {\r\n\t\tonMountedData();\r\n\t}, []);\r\n\r\n\tutil.useDebounce(input, 1000, async () => { if (input) setItems(await fetchCities(input)); });\r\n\tconst classes = useStyles();\r\n\r\n\r\n\treturn (\r\n\t\t\r\n\t\t<Autocomplete\r\n\t\tclassName=\"WeatherAutocomplete--main-container\"\r\n\t\t\tonInputChange={async (event, searchQuery) => {\r\n\t\t\t\t// Emiting the function only if input changed came from user typing and not by clicking on of the options\r\n\t\t\t\tif (event && event.type === \"change\" && searchQuery)\r\n\t\t\t\t\tsetInput(searchQuery);\r\n\t\t\t}}\r\n\t\t\tonChange={(event, newVal) => setNewVal(newVal)} \r\n\t\t\t// ListboxComponent={ListboxComponent}\r\n\t\t\tgetOptionLabel={(option) => `${option.LocalizedName}, ${ option.Country ? option.Country.LocalizedName : \"\" }` }\r\n\t\t\tvalue={value}\r\n\t\t\toptions={items}\r\n\t\t\tloading={loading}\r\n\t\t\tmargin=\"dense\"\r\n\t\t\tgetOptionSelected={(option, value) => value && option && option.Key === value.Key }\r\n\t\t\topen={open}\r\n\t\t\tonOpen={() => { setOpen(true); }}\r\n\t\t\tonClose={() => { setOpen(false); }}\r\n\t\t\trenderOption={(option) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Grid container alignItems=\"center\" className=\"asdsadlfgjoedfikghjokdfsghj\" >\r\n\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t<LocationOnIcon className={classes.icon} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs >\r\n\t\t\t\t\t\t\t<Typography variant=\"body2\" >{`${option.LocalizedName}, ${option.Country.LocalizedName}`}</Typography>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t);\r\n\t\t\t}}\r\n\t\t\trenderInput={(params) => (\r\n\t\t\t\t<Paper component=\"form\" className={classes.root}>\t\r\n\t\t\t\t<TextField\r\n\t\t\t\tclassName=\"WeatherAutocomplete--input\"\r\n\t\t\t\t// color=\"natural\"\r\n\t\t\t\t\tautoFocus\r\n\t\t\t\t\t{...params}\r\n\t\t\t\t\t// margin=\"dense\"\r\n\t\t\t\t\tplaceholder=\"Select Location\"\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t...params.InputProps,\r\n\t\t\t\t\t\tstartAdornment: (<SearchIcon className=\"mr-1\"/>),\r\n\t\t\t\t\t\tendAdornment: (\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t{loading ? (\r\n\t\t\t\t\t\t\t\t\t<CircularProgress color=\"inherit\" size={20} />\r\n\t\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t{params.InputProps.endAdornment}\r\n\t\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t}}\r\n\t\t\t \t/>\r\n\t\t\t  </Paper>\r\n\t\t\t)}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    appConfig: state.appConfig,\r\n    // fiveDay: state.fiveDay,\r\n    // currentWeather: state.currentWeatherReducer,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    dispatchCurrentWeatherInfo: (payload) =>\r\n      dispatch({ type: \"UPDATE_CURRENT_WEATHER_INFO\", payload }),\r\n    // dispatchFiveDaysData: (payload) => dispatch({ type: \"ADD_FIVE_DAY_FETCH_DATA\", payload }),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeroloAutocomplete);\r\n","import HTTP from \"../HTTP\";\r\nexport const accuweatherAPI = {\r\n  fiveDays: (loactionId, isMetric) =>\r\n    HTTP.get(\r\n      `http://dataservice.accuweather.com/forecasts/v1/daily/5day/${loactionId}`,\r\n      { language: \"en-us\", details: true, metric: true }\r\n    ),\r\n\r\n  autocompleteCities: (searchQuery) => {\r\n    if (!searchQuery) return [];\r\n    return HTTP.get(\"locations/v1/cities/autocomplete\", {\r\n      language: \"en-us\",\r\n      q: searchQuery,\r\n    });\r\n  },\r\n  \r\n  currentWeather: (loactionId) => {\r\n    return HTTP.get(\r\n      `http://dataservice.accuweather.com/currentconditions/v1/${loactionId}`,\r\n      { language: \"en-us\", details: true }\r\n    );\r\n  },\r\n};\r\n","import { Card } from \"@material-ui/core\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst InnerCard = (props) => {\r\n  const useStyles = makeStyles((theme) => ({\r\n    innerCard: {\r\n      backgroundColor: `${theme.palette.innerCard[props.appConfig.themeType]} !important`,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  debugger;\r\n  return <Card className={`${classes.innerCard} ${props.className} fgadfgdsfgdsfgkjdsfoikgjdofjg`}>{props.children}</Card>;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  appConfig: state.appConfig,\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InnerCard);\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles({\r\n  tempUnitBtn: {\r\n    paddingTop: \"12px\",\r\n    minWidth: \"unset\",\r\n    outline: \"none !important\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#461eb7 !important\",\r\n    },\r\n  },\r\n  media: {\r\n    backgroundSize: \"auto\",\r\n    width: \"45px\",\r\n    height: \"45px\",\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    minWidth: \"444px\",\r\n    minHeight: \"191px\",\r\n  },\r\n});\r\n","/* prettier-ignore */\r\nimport React from \"react\";\r\nimport current_weather from \"../../data/current_weather.json\";\r\nimport { accuweatherAPI } from \"../../services/API/accuweather\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { connect } from \"react-redux\";\r\nimport { Box, Button, CardMedia, Divider, Grid, Typography, } from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport InnerCard from \"../InnerCard.js\";\r\nimport {util} from \"../../services/util\"\r\nimport appConfigActions from \"../../App/actions\";\r\nimport {useStyles} from \"./style\"\r\n\r\n/* prettier-ignore */\r\nfunction CurrentWeather(props) {\r\n  const locationId = props.match.params.locationId;\r\n  const [currentWeather, setCurrentWeather] = React.useState(null);\r\n  const [loading, setLoading] = React.useState(false);\r\n  const classes = useStyles();\r\n\r\n  const dataInit = async () => {\r\n\tif (!locationId) return;\r\n\tsetLoading(true)\r\n\tconst currentWeather = current_weather || props.CURRENT_WEATHER_STORE[locationId] || await accuweatherAPI.currentWeather(locationId);\r\nawait\tutil.sleep(1000)\r\n\tsetLoading(false)\r\n    setCurrentWeather(currentWeather);\r\n    props.dispatchCurrentWeather({ [locationId]: currentWeather });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    dataInit(props.CURRENT_WEATHER_STORE.info.key);\r\n  }, [props.CURRENT_WEATHER_STORE.info.key]);\r\n\r\n  const appTempUnit = props.APP_CONFIG.tempratureUnit;\r\n  const isReady = props.APP_CONFIG.isAppReady && !loading && currentWeather && props.CURRENT_WEATHER_STORE.info.name \r\n  return (\r\n\t\r\n    <InnerCard className={classes.root}>\r\n      {!isReady && (\r\n        <Box margin=\"auto\">\r\n          <CircularProgress color=\"inherit\" size={75} />\r\n        </Box>\r\n      )}\r\n      {isReady &&\r\n        currentWeather.map((item, i) => (\r\n          <Grid container spacing={3} key={i} style={{ padding: \"15px\" }}>\r\n\t\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"subtitle2\" className=\"px-4\"> {props.CURRENT_WEATHER_STORE.info.name} </Typography>\r\n              <Typography variant=\"subtitle1\" className=\"px-4\">{moment(item.LocalObservationDateTime).format(\"dddd\")} {moment(item.LocalObservationDateTime).format(\"HH:MM\")}</Typography>\r\n              <Typography variant=\"subtitle1\" className=\"px-4\">{item.WeatherText}</Typography>\r\n              <Grid\r\n                container\r\n                spacing={2}\r\n                className=\"px-4\"\r\n                style={{ marginTop: \"auto\" }}\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid item xs={\"auto\"}>\r\n                  <CardMedia\r\n                    className={classes.media}\r\n                    image={`https://developer.accuweather.com/sites/default/files/${item.WeatherIcon.toString().padStart( 2, \"0\" )}-s.png`}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={\"auto\"}>\r\n                  <Box display=\"flex\">\r\n                    <Typography variant=\"h2\" className=\"pt-1\">{Math.floor(item.Temperature[appTempUnit].Value)}</Typography>\r\n                    <Box display=\"flex\" height=\"max-content\">\r\n                      <Button\r\n                        style={{color: appTempUnit === \"Imperial\" ? \"grey\" : \"white\"}}\r\n                        onClick={() => props.updateAppConfig({ tempratureUnit: \"Metric\" }) }\r\n                        className={classes.tempUnitBtn}\r\n                      >\r\n                        °C\r\n                      </Button>\r\n                      <Divider orientation=\"vertical\" flexItem />\r\n                      <Button\r\n                        onClick={() => props.updateAppConfig({ tempratureUnit: \"Imperial\", }) }\r\n                        style={{color: appTempUnit === \"Imperial\" ? \"white\" : \"grey\"}}\r\n                        className={classes.tempUnitBtn}\r\n                      >\r\n                    \t°F\r\n                      </Button>\r\n                    </Box>\r\n                  </Box>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        ))}\r\n    </InnerCard>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    CURRENT_WEATHER_STORE: state.currentWeather,\r\n    APP_CONFIG: state.appConfig,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateAppConfig: (payload) =>\r\n      dispatch(appConfigActions.UPDATE_APP_CONFIG(payload)),\r\n    dispatchCurrentWeather: (payload) =>\r\n      dispatch({ type: \"ADD_CURRENT_WEATHER_RESULTS\", payload }),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CurrentWeather);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport PropTypes from \"prop-types\";\r\nimport moment from \"moment\";\r\n\r\nconst convert = require('convert-units')\r\n\r\nconst useStyles = makeStyles({\r\n  media: {\r\n    backgroundSize: 'auto',\r\n    // margin: \"auto\",\r\n    width: \"47px\",\r\n    height: \"45px\",\r\n  },\r\n  weatherInfo: {\r\n    margin: \"10px\",\r\n  },\r\n  root: {\r\n    borderRadius: 0,\r\n    maxWidth: 185,\r\n    minWidth: 185,\r\n  },\r\n  unitText: {\r\n    margin: \"3px 5px\",\r\n  },\r\n});\r\n\r\nfunction ForcastCard(props) {\r\n  const { item } = props;\r\n  const tempCumpute = (temp) => Math.floor( props.appConfig.tempratureUnit === \"Imperial\" ? convert(temp).from('C').to('F') : temp)\r\n  const tempratureUnit = `°${props.appConfig.tempratureUnit === \"Imperial\" ? 'F' : 'C'}`\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    item && (\r\n      <Grid container className={classes.root}>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h6\" color=\"textSecondary\" gutterBottom align=\"center\" > {moment(item.Date).format(\"dddd\")} </Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <CardMedia className={classes.media} image={`https://developer.accuweather.com/sites/default/files/${item.Day.Icon.toString().padStart( 2, \"0\" )}-s.png`} />\r\n        </Grid>\r\n        <Grid container item xs={12} className={classes.weatherInfo}>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h6\" component=\"h2\"> {item.Day.IconPhrase} </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n            <Box display=\"flex\" justifyContent=\"space-between\">\r\n              <Box display=\"flex\">\r\n                <Typography variant=\"h4\">{tempCumpute(item.Temperature.Maximum.Value)}</Typography>\r\n                <Typography variant=\"h5\" className={classes.unitText} >{tempratureUnit}</Typography>\r\n              </Box>\r\n              <Box display=\"flex\">\r\n                <Typography variant=\"h4\" color=\"textSecondary\"> {tempCumpute(item.Temperature.Minimum.Value)}</Typography>\r\n                <Typography variant=\"h5\" color=\"textSecondary\" className={classes.unitText} >{tempratureUnit}</Typography>\r\n              </Box>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n  );\r\n}\r\n\r\nForcastCard.propTypes = {\r\n  item: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    appConfig: state.appConfig,\r\n  };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps)(ForcastCard);\r\n","export const actions = {\r\n  ADD_FIVE_DAY_FETCH_DATA: (payload) => {\r\n    return { type: \"ADD_FIVE_DAY_FETCH_DATA\", payload: payload };\r\n  },\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    height: 140,\r\n    width: 100,\r\n  },\r\n  control: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n","import ForcastCard from \"../ForcastCard/ForcastCard\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { connect } from \"react-redux\";\r\nimport { accuweatherAPI } from \"../../services/API/accuweather\";\r\nimport React from \"react\";\r\nimport { actions } from \"./actions\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { useStyles } from \"./style\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport FIVE_DAYS_DATA from \"../../data/5_days_of_daily_forecasts.json\";\r\n\r\nfunction sleep(delay = 0) {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n}\r\n\r\nfunction DailyForecasts(props) {\r\n  const classes = useStyles();\r\n  const locationId = props.match.params.locationId;\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [fiveDaysForecastsItems, setFiveDaysForecastsItems] = React.useState( null );\r\n\r\n  const dataInit = async () => {\r\n    setLoading(true);\r\n    await sleep(1000);\r\n    // Fetching 5 Days of Daily Forecasts according to the locationId from the route, first trying to get data from redux store, if not exsit fetching from the server\r\n    const fiveDaysFetch =\r\n      FIVE_DAYS_DATA ||\r\n      props.fiveDay[locationId] ||\r\n      (await accuweatherAPI.fiveDays(locationId));\r\n    if (fiveDaysFetch.DailyForecasts) {\r\n      setFiveDaysForecastsItems(fiveDaysFetch.DailyForecasts);\r\n      props.ADD_FIVE_DAY_FETCH_DATA({\r\n        ...props.fiveDay,\r\n        [locationId]: fiveDaysFetch,\r\n      });\r\n    }\r\n    setLoading(false);\r\n  };\r\n  React.useEffect(() => {\r\n    dataInit();\r\n  }, [locationId]);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      {loading ? (\r\n        <Grid item xs={\"auto\"}>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"center\"\r\n            height={177}\r\n            alignItems=\"center\"\r\n          >\r\n            <CircularProgress color=\"inherit\" size={80} />\r\n          </Box>\r\n        </Grid>\r\n      ) : (\r\n        <Grid item xs={\"auto\"}>\r\n          <Grid container justify=\"center\" direction=\"row\">\r\n            {fiveDaysForecastsItems &&\r\n              fiveDaysForecastsItems.map((item, i) => (\r\n                <Grid key={i} item md={\"auto\"} xs={\"auto\"} lg={\"auto\"}>\r\n                  <Box display=\"flex\" justifyContent=\"center\">\r\n                    <ForcastCard item={item} />\r\n                  </Box>\r\n                </Grid>\r\n              ))}\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </Card>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    appConfig: state.appConfig,\r\n    fiveDay: state.fiveDay,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    ADD_FIVE_DAY_FETCH_DATA: (payload) =>\r\n      dispatch(actions.ADD_FIVE_DAY_FETCH_DATA(payload)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DailyForecasts);\r\n","import { Box, Grid, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport HeroloAutocomplete from \"../../../components/HeroloAutocomplete/HeroloAutocomplete\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n}));\r\nexport default function WelcomeSearch() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container >\r\n      <Typography color=\"textPrimary\" variant=\"h4\" gutterBottom > Diffrent kind of weather </Typography>\r\n      <Typography color=\"textPrimary\" variant=\"h4\" gutterBottom > inside of 24/7 hours. </Typography>\r\n      <Box mt={2}>\r\n        <Typography color=\"textPrimary\" m={2} variant=\"subtitle2\" gutterBottom >\r\n          Yet too often some very human cultural artifacts really lead the\r\n          business down the certain routes.\r\n        </Typography>\r\n      </Box>\r\n      <Box mt={8} width=\"100%\">\r\n        <Route component={HeroloAutocomplete} />\r\n        <Box mt={2}>\r\n          <Typography color=\"textPrimary\" variant=\"subtitle2\" >\r\n            Best way to know your ciry weather.\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, useLocation } from \"react-router-dom\";\r\nimport HeroloAutocomplete from \"../../components/HeroloAutocomplete/HeroloAutocomplete\";\r\nimport CurrentWeather from \"../../components/CurrentWeather/CurrentWeather\";\r\nimport FiveDailyForecasts from \"../../components/FiveDailyForecasts/FiveDailyForecasts\";\r\nimport HTTP from \"../../services/HTTP\";\r\nimport CITEIS_AUTOCOMPLETE_DATA from \"../../data/cities_autocomplete.json\";\r\nimport FIVE_DAYS_DATA from \"../../data/5_days_of_daily_forecasts.json\";\r\nimport currentWeather from \"../../data/current_weather.json\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport WelcomeSearch from \"./components/WelcomeSearch\";\r\nimport { Box, Card, CardMedia, Container, Typography } from \"@material-ui/core\";\r\nimport InnerCard from \"../../components/InnerCard\";\r\n\r\nfunction Weather(props) {\r\n  const useStyles = makeStyles((theme) => ({\r\n    favList: {\r\n      maxHeight: \"65vh\",\r\n      overflowY: \"auto\",\r\n    },\r\n    outterCard: {\r\n      margin: \"0 auto\",\r\n      width: \"100%\",\r\n      maxWidth: \"957px\",\r\n      //   backgroundColor: theme.palette.outterCard[props.appConfig.themeType],\r\n    },\r\n    weatherTitleIcon: {\r\n      width: \"96px\",\r\n      height: \"100%\",\r\n    },\r\n\r\n    currentWeatherGrid: {\r\n      padding: \"17px\",\r\n      height: \"max-content\",\r\n    },\r\n    root: {\r\n      width: \"100%\",\r\n      margin: \"0 auto\",\r\n      maxWidth: \"1005px\",\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container maxWidth=\"md\" className={classes.root}>\r\n      <Grid container className={classes.root} spacing={0}>\r\n        <Grid item xs={12} md={\"6\"}>\r\n          <Route component={WelcomeSearch} />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          md={\"6\"}\r\n          //   spacing={3}\r\n      \r\n          // className={`${classes.currentWeatherGrid}`}\r\n        >\r\n          <Card  className={`${classes.currentWeatherGrid}`}>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12}>\r\n                <InnerCard>\r\n                  <Grid\r\n                    container\r\n                   \r\n                    //   className=\"px-2\"\r\n                    style={{ padding: \"15px\" }}\r\n                  >\r\n                    <Grid item>\r\n                      <CardMedia\r\n                        className={classes.weatherTitleIcon}\r\n                        image={`https://www.iconfinder.com/data/icons/weather-flat-14/64/weather02-512.png`}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Typography variant=\"h5\">Total Weather Report</Typography>\r\n                      <Typography variant=\"h5\"> some info</Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </InnerCard>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Route\r\n                //   exact\r\n                  path={\"/weather/:locationId?/\"}\r\n                  component={CurrentWeather}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Route\r\n            \r\n            path={\"/weather/:locationId?/\"}\r\n            component={FiveDailyForecasts}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    appConfig: state.appConfig,\r\n    // fiveDay: state.fiveDay,\r\n    // currentWeather: state.currentWeatherReducer,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    // dispatchCurrentWeatherInfo: (payload) => dispatch({ type: \"UPDATE_CURRENT_WEATHER_INFO\", payload }),\r\n    // dispatchFiveDaysData: (payload) => dispatch({ type: \"ADD_FIVE_DAY_FETCH_DATA\", payload }),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Weather);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport InboxIcon from \"@material-ui/icons/Inbox\";\r\nimport DraftsIcon from \"@material-ui/icons/Drafts\";\r\nimport { Box, Card, Container, Grid } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { connect } from \"react-redux\";\r\nfunction ListItemLink(props) {\r\n  return <ListItem button component=\"a\" {...props} />;\r\n}\r\n\r\nfunction SimpleList(props) {\r\n  const useStyles = makeStyles((theme) => {\r\n    debugger;\r\n    return {\r\n      favList: {\r\n        maxHeight: \"65vh\",\r\n        overflowY: \"auto\",\r\n      },\r\n      root: {\r\n        margin: \"0 auto\",\r\n        width: \"100%\",\r\n        maxWidth: \"957px\",\r\n        // backgroundColor: theme.palette.otterCard[props.appConfig.themeType],\r\n      },\r\n  \r\n    };\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      flexDirection=\"column\"\r\n      zIndex={4}\r\n      className={classes.root}\r\n    >\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Card container>\r\n            <Typography variant=\"h5\" className=\"px-4 py-3\">\r\n              h5. Heading\r\n            </Typography>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Card container className={(classes.favList)}>\r\n            <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n              <ListItem button>\r\n                <ListItemIcon>\r\n                  <InboxIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Inbox\" />\r\n              </ListItem>\r\n              <ListItem button>\r\n                <ListItemIcon>\r\n                  <DraftsIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Drafts\" />\r\n              </ListItem>\r\n            </List>\r\n            <Divider />\r\n            <List component=\"nav\" aria-label=\"secondary mailbox folders\">\r\n              <ListItem button>\r\n                <ListItemText primary=\"Trash\" />\r\n              </ListItem>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n              <ListItemLink href=\"#simple-list\">\r\n                <ListItemText primary=\"Spam\" />\r\n              </ListItemLink>\r\n            </List>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    appConfig: state.appConfig,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(SimpleList);\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport \"./App.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { theme } from \"./plugins/material-ui\";\r\nimport HeroloTabs from \"./components/HeroloTabs/HeroloTabs\";\r\nimport Weather from \"./Views/Weather/Weather\";\r\nimport { CardMedia, Grid } from \"@material-ui/core\";\r\nimport Favorite from \"./Views/Favorite/Favorite\";\r\nimport appConfigActions from \"./App/actions\"\r\n\r\n\r\nfunction App(props) {\r\n  \r\n  React.useEffect(() => {\r\n    props.updateAppConfig({isAppReady: true})\r\n  }, [])\r\n  \r\n  const [selectedLocation, setselectedLocation] = React.useState(null);\r\n  return (\r\n    <MuiThemeProvider theme={theme(props)}>\r\n      <CardMedia\r\n        className=\"app--bg-image\"\r\n        image=\"https://www.wallpaperflare.com/static/656/666/467/landscape-mountains-clouds-forest-wallpaper.jpg\"\r\n      />\r\n      <Router>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12}>\r\n            <Route\r\n              path={\"/:tab/:locationId?\"}\r\n              render={(url) => <HeroloTabs url={url} />}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Switch>\r\n              <Route path={\"/weather/:locationId?\"} component={Weather} />\r\n              <Route path={\"/favorite\"} component={Favorite} />\r\n              <Redirect exact to={\"/weather\"} />\r\n            </Switch>\r\n          </Grid>\r\n        </Grid>\r\n      </Router>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    appConfig: state.appConfig,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateAppConfig: (payload) => dispatch(appConfigActions.UPDATE_APP_CONFIG(payload)),\r\n\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}